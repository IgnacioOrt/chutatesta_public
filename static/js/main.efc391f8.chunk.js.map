{"version":3,"sources":["serviceWorker.js","helpers/chartjs.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","common/validators.js","components/SearchInput/SearchInput.js","components/StatusBullet/StatusBullet.js","components/RouteWithLayout/RouteWithLayout.js","components/PageTitleBar/PageTitleBar.js","components/Required/Required.js","components/ImageUpload/ImageUpload.js","layouts/Main/components/Footer/Footer.js","layouts/Main/components/Sidebar/components/Profile/Profile.js","layouts/Main/components/Sidebar/components/SidebarNav/SidebarNav.js","layouts/Main/components/Sidebar/Sidebar.js","layouts/Main/components/Sidebar/components/UpgradePlan/UpgradePlan.js","layouts/Main/components/Topbar/Topbar.js","layouts/Main/Main.js","layouts/Minimal/components/Topbar/Topbar.js","layouts/Minimal/Minimal.js","views/Account/components/AccountDetails/AccountDetails.js","views/Account/components/AccountProfile/AccountProfile.js","views/Account/Account.js","views/Dashboard/components/Budget/Budget.js","views/Dashboard/components/LatestOrders/data.js","views/Dashboard/components/LatestOrders/LatestOrders.js","views/Dashboard/components/LatestProducts/data.js","views/Dashboard/components/LatestProducts/LatestProducts.js","views/Dashboard/components/LatestSales/chart.js","views/Dashboard/components/LatestSales/LatestSales.js","views/Dashboard/components/TasksProgress/TasksProgress.js","views/Dashboard/components/TotalProfit/TotalProfit.js","views/Dashboard/components/TotalUsers/TotalUsers.js","views/Dashboard/components/UsersByDevice/UsersByDevice.js","views/Dashboard/Dashboard.js","views/NotFound/NotFound.js","views/Icons/Icons.js","utils/API.js","views/ProductList/components/ModalProductTable/ModalProductTable.js","views/ProductList/components/AlertInput/AlertInput.js","views/ProductList/components/ModalBaseProduct/ModalBaseProduct.js","views/ProductList/components/ModalProduct/ModalProduct.js","views/ProductList/ProductList.js","views/Settings/components/Notifications/Notifications.js","views/Settings/components/Password/Password.js","views/Settings/Settings.js","icons/Facebook/index.js","icons/Google/index.js","views/SignIn/SignIn.js","views/SignUp/SignUp.js","views/Typography/Typography.js","views/UserList/components/UsersTable/UsersTable.js","views/UserList/components/UsersToolbar/UsersToolbar.js","views/UserList/data.js","views/UserList/UserList.js","views/Stock/TableConfig.js","components/ModalProvider/components/Phone.js","components/ModalProvider/ModalProvider.js","views/Stock/Components/ModalStock.js","views/Stock/StockList.js","views/Provider/ProviderList.js","views/Sales/components/TabPanel.js","views/Sales/conf.js","views/Sales/Sales.js","views/PurchaseOrder/PurchaseOrder.js","views/Clients/TableConfig.js","views/Clients/Clients.js","views/SalesHistory/SalesHistory.js","Routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","height","width","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","white","black","primary","contrastText","dark","colors","indigo","main","light","secondary","blue","success","green","info","warning","orange","error","red","text","blueGrey","link","background","default","paper","icon","divider","grey","h1","color","palette","fontWeight","fontSize","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","textTransform","MuiButton","contained","boxShadow","MuiIconButton","root","MuiPaper","elevation1","MuiTableCell","typography","MuiTableHead","MuiTypography","gutterBottom","marginBottom","theme","createMuiTheme","overrides","zIndex","appBar","drawer","checked","value","message","makeStyles","borderRadius","alignItems","padding","spacing","display","flexBasis","marginRight","input","flexGrow","useStyles","flexShrink","sm","md","lg","neutral","danger","StatusBullet","props","className","size","rest","classes","clsx","defaultProps","RouteWithLayout","Layout","layout","Component","component","render","matchProps","PageTitleBar","Helmet","title","name","content","description","Required","Tooltip","placement","style","ImageUpload","onChangeImage","e","type","includes","reader","FileReader","file","readAsDataURL","onload","fileInfo","round","base64","result","console","log","setState","image","state","Paper","elevation","paddingTop","src","accept","id","onChange","target","files","onClick","event","currentTarget","htmlFor","Button","variant","startIcon","Footer","flexDirection","minHeight","avatar","marginTop","item","paddingBottom","justifyContent","fontWeightMedium","active","CustomRouterLink","forwardRef","ref","SidebarNav","pages","List","map","page","ListItem","disableGutters","key","activeClassName","to","href","media","textAlign","actions","breakpoints","up","margin","nav","Sidebar","open","onClose","Drawer","anchor","signOutButton","marginLeft","Topbar","onSidebarOpen","useState","notifications","AppBar","Toolbar","textDecoration","Hidden","mdDown","IconButton","Badge","badgeContent","length","lgUp","shiftContent","paddingLeft","Main","children","useTheme","isDesktop","useMediaQuery","defaultMatches","openSidebar","setOpenSidebar","shouldOpenSidebar","position","Minimal","details","progress","uploadButton","difference","differenceIcon","differenceValue","uuid","amount","customer","createdAt","status","inner","minWidth","statusContainer","statusColors","delivered","pending","refunded","LatestOrders","mockData","orders","Card","CardHeader","action","Divider","CardContent","Table","TableHead","TableRow","TableCell","sortDirection","enterDelay","TableSortLabel","direction","TableBody","order","hover","moment","format","CardActions","imageUrl","updatedAt","subtract","LatestProducts","products","subtitle","product","ListItemAvatar","alt","ListItemText","fromNow","edge","data","labels","datasets","label","responsive","maintainAspectRatio","animation","legend","tooltips","enabled","mode","intersect","titleFontColor","bodyFontColor","footerFontColor","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","chartContainer","LatestSales","TasksProgress","Grid","container","justify","Avatar","LinearProgress","TotalProfit","TotalUsers","stats","device","deviceIcon","UsersByDevice","hoverBorderColor","cutoutPercentage","devices","Dashboard","xl","xs","iframe","border","maxWidth","NotFound","axios","create","baseURL","responseType","headers","columns","ModalProductTable","TableContainer","maxHeight","stickyHeader","aria-label","column","tabIndex","align","colSpan","role","quantity","cost","rowSpan","reduce","prev","next","parseInt","AlertInput","handleChange","onSubmitQuantity","preventDefault","onConfirmAddProduct","inputQuantity","modalTitle","isOpen","Modal","centered","toggle","onSubmit","ModalHeader","ModalBody","nombre","unidad_de_medida","Alert","severity","TextField","fullWidth","required","ModalFooter","cancelModal","ModalBaseProduct","getStock","API","get","then","response","stock","catch","getIngredientCost","measure","price","handleSelectIngredient","alertQuantity","alertQuantityItem","onChangeQuantity","ingredient","verifyIngredient","ingredients","filter","ingrediente","id_stock","quantityValue","precio","id_base_product","FormControl","OutlinedInput","endAdornment","InputAdornment","defaultValue","labelWidth","deleteIngredient","newIngredients","onSubmitModal","stockSelect","undefined","productName","productDescription","Form","autoComplete","Container","Row","Col","multiline","rows","select","helperText","stockItem","MenuItem","ModalProduct","onDrop","pictureFiles","pictureDataURLs","pictures","concat","getBaseProducts","baseProducts","getCategories","categories","sweetAlert","productCategory","baseProductSelect","baseProductModal","category","id_categoria","ProductList","modalProductTitle","modalProductOpen","Facebook","SvgIcon","d","Google","schema","email","presence","allowEmpty","maximum","password","grid","quoteContainer","down","quote","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","quoteInner","quoteText","bio","contentContainer","contentHeader","paddingBototm","paddingRight","logoImage","contentBody","form","socialButtons","socialIcon","sugestion","textField","signInButton","withRouter","history","isValid","values","touched","errors","formState","setFormState","useEffect","validate","persist","handleSignIn","push","hasError","field","person","goBack","disabled","Link","RouterLink","firstName","lastName","policy","policyCheckbox","signUpButton","Checkbox","policyText","underline","FormHelperText","nameContainer","row","spacer","importButton","exportButton","searchInput","editable","lookup","actionsColumnIndex","detailPanel","rowData","scope","tooltip","birthYear","localization","pagination","labelDisplayedRows","labelRowsSelect","labelRowsPerPage","firstAriaLabel","firstTooltip","previousAriaLabel","previousTooltip","nextAriaLabel","nextTooltip","lastAriaLabel","lastTooltip","toolbar","nRowsSelected","exportTitle","exportAriaLabel","exportName","searchTooltip","searchPlaceholder","header","body","emptyDataSourceMessage","filterRow","filterTooltip","addTooltip","deleteTooltip","editTooltip","editRow","deleteText","cancelTooltip","saveTooltip","tableIcons","Add","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Phone","isValidPhoneNumber","country","onlyCountries","placeholder","disableDropdown","countryCodeEditable","ModalProvider","tel","providerPhone","provider","providerName","direccion","providerAddress","telefono","post","res","errorAlert","showAlert","verifyValidPhone","phone","isPossiblePhoneNumber","onConfirm","onCancel","handlePhone","FormGroup","Label","for","ModalStock","getProvidersInfo","providerInfo","cancelProviderModal","modalProvider","itemName","id_proveedor","idProvider","descripcion","itemDescription","dias_de_soporte","supportDays","unit","id_supplier","FormText","disableFocusRipple","StockList_","handleSelect","p","getStockData","a","stockData","s","quantityButton","cantidad","option","proveedor","fecha_de_compra","fecha_de_caducidad","allStockData","getResponseError","request","openSnackBar","snackbarSeverity","snackbarLabel","tableConfig","icons","onRowAdd","newData","Promise","resolve","setTimeout","prevState","onRowUpdate","oldData","onRowDelete","delete","splice","Snackbar","anchorOrigin","vertical","autoHideDuration","Fragment","ProviderList","TabPanel","hidden","aria-labelledby","Box","ventas","id_venta","fecha_creacion","productos","id_producto","categorias","imagen","Arrow","ArrowLeft","ArrowRight","Sales","addProduct","pro","addProductAlert","inputType","validationRegex","RegExp","validationMsg","showCancel","cancelBtnText","confirmBtnText","confirmBtnBsStyle","cancelBtnBsStyle","btnSize","placeHolder","onCancelAddProduct","setProductsInitialization","categoria","CardActionArea","CardMedia","substring","onSelect","selected","addTab","tab","tabs","tabC","tabContent","newValue","handleChangeCategory","valueCategory","setIds","getSaleMenu","productsMenu","Tabs","indicatorColor","textColor","scrollButtons","Tab","arrowLeft","arrowRight","alignCenter","wheel","key2","PurchaseOrder","filterType","Clients","getClients","clients","Object","SalesHistory","Routes","exact","from","DashboardView","MainLayout","path","StockListView","ProductListView","ProviderListView","PurchaseOrderView","ClientsView","SaleView","SalesHistoryView","NotFoundView","MinimalLayout","browserHistory","createBrowserHistory","Chart","helpers","extend","elements","Rectangle","prototype","chartjs","validators","App","ThemeProvider","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.efc391f8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// ChartJS extension rounded bar chart\r\n// https://codepen.io/jedtrow/full/ygRYgo\r\nfunction draw() {\r\n  const { ctx } = this._chart;\r\n  const vm = this._view;\r\n  let { borderWidth } = vm;\r\n\r\n  let left;\r\n  let right;\r\n  let top;\r\n  let bottom;\r\n  let signX;\r\n  let signY;\r\n  let borderSkipped;\r\n  let radius;\r\n\r\n  // If radius is less than 0 or is large enough to cause drawing errors a max\r\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\r\n  let { cornerRadius } = this._chart.config.options;\r\n  if (cornerRadius < 0) {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (typeof cornerRadius === 'undefined') {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || 'bottom';\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || 'left';\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    const halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    const borderLeft =\r\n      left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n    const borderRight =\r\n      right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n    const borderBottom =\r\n      bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  const borders = ['bottom', 'left', 'top', 'right'];\r\n  let startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  let corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (let i = 1; i < 4; i += 1) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    const width = corners[2][0] - corners[1][0];\r\n    const height = corners[0][1] - corners[1][1];\r\n    const x = corners[1][0];\r\n    const y = corners[1][1];\r\n\r\n    radius = cornerRadius;\r\n    // Fix radius being too large\r\n    if (radius > Math.abs(height) / 2) {\r\n      radius = Math.floor(Math.abs(height) / 2);\r\n    }\r\n    if (radius > Math.abs(width) / 2) {\r\n      radius = Math.floor(Math.abs(width) / 2);\r\n    }\r\n\r\n    if (height < 0) {\r\n      // Negative values in a standard bar chart\r\n      const xTl = x;\r\n      const xTr = x + width;\r\n      const yTl = y + height;\r\n      const yTr = y + height;\r\n\r\n      const xBl = x;\r\n      const xBr = x + width;\r\n      const yBl = y;\r\n      const yBr = y;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else if (width < 0) {\r\n      // Negative values in a horizontal bar chart\r\n      const xTl = x + width;\r\n      const xTr = x;\r\n      const yTl = y;\r\n      const yTr = y;\r\n\r\n      const xBl = x + width;\r\n      const xBr = x;\r\n      const yBl = y + height;\r\n      const yBr = y + height;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else {\r\n      // Positive Value\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.lineTo(x + width - radius, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      ctx.lineTo(x + width, y + height - radius);\r\n      ctx.quadraticCurveTo(\r\n        x + width,\r\n        y + height,\r\n        x + width - radius,\r\n        y + height\r\n      );\r\n      ctx.lineTo(x + radius, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      ctx.lineTo(x, y + radius);\r\n      ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nexport default {\r\n  draw\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nconst white = '#FFFFFF';\r\nconst black = '#000000';\r\n\r\nexport default {\r\n  black,\r\n  white,\r\n  primary: {\r\n    contrastText: white,\r\n    dark: colors.indigo[900],\r\n    main: colors.indigo[500],\r\n    light: colors.indigo[100]\r\n  },\r\n  secondary: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue['A400'],\r\n    light: colors.blue['A400']\r\n  },\r\n  success: {\r\n    contrastText: white,\r\n    dark: colors.green[900],\r\n    main: colors.green[600],\r\n    light: colors.green[400]\r\n  },\r\n  info: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue[600],\r\n    light: colors.blue[400]\r\n  },\r\n  warning: {\r\n    contrastText: white,\r\n    dark: colors.orange[900],\r\n    main: colors.orange[600],\r\n    light: colors.orange[400]\r\n  },\r\n  error: {\r\n    contrastText: white,\r\n    dark: colors.red[900],\r\n    main: colors.red[600],\r\n    light: colors.red[400]\r\n  },\r\n  text: {\r\n    primary: colors.blueGrey[900],\r\n    secondary: colors.blueGrey[600],\r\n    link: colors.blue[600]\r\n  },\r\n  background: {\r\n    default: '#F4F6F8',\r\n    paper: white\r\n  },\r\n  icon: colors.blueGrey[600],\r\n  divider: colors.grey[200]\r\n};\r\n","import palette from './palette';\r\n\r\nexport default {\r\n  h1: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '35px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '40px'\r\n  },\r\n  h2: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '29px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '32px'\r\n  },\r\n  h3: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '24px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '28px'\r\n  },\r\n  h4: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '20px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '24px'\r\n  },\r\n  h5: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px'\r\n  },\r\n  h6: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px'\r\n  },\r\n  subtitle1: {\r\n    color: palette.text.primary,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '25px'\r\n  },\r\n  subtitle2: {\r\n    color: palette.text.secondary,\r\n    fontWeight: 400,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px'\r\n  },\r\n  body1: {\r\n    color: palette.text.primary,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px'\r\n  },\r\n  body2: {\r\n    color: palette.text.secondary,\r\n    fontSize: '12px',\r\n    letterSpacing: '-0.04px',\r\n    lineHeight: '18px'\r\n  },\r\n  button: {\r\n    color: palette.text.primary,\r\n    fontSize: '14px'\r\n  },\r\n  caption: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px'\r\n  },\r\n  overline: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    fontWeight: 500,\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px',\r\n    textTransform: 'uppercase'\r\n  }\r\n};\r\n","import MuiButton from './MuiButton';\r\nimport MuiIconButton from './MuiIconButton';\r\nimport MuiPaper from './MuiPaper';\r\nimport MuiTableCell from './MuiTableCell';\r\nimport MuiTableHead from './MuiTableHead';\r\nimport MuiTypography from './MuiTypography';\r\n\r\nexport default {\r\n  MuiButton,\r\n  MuiIconButton,\r\n  MuiPaper,\r\n  MuiTableCell,\r\n  MuiTableHead,\r\n  MuiTypography\r\n};\r\n","export default {\r\n  contained: {\r\n    boxShadow:\r\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\r\n    backgroundColor: '#FFFFFF'\r\n  }\r\n};\r\n","import palette from '../palette';\r\n\r\nexport default {\r\n  root: {\r\n    color: palette.icon,\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\r\n    }\r\n  }\r\n};\r\n","export default {\r\n  elevation1: {\r\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\r\n  }\r\n};\r\n","import palette from '../palette';\r\nimport typography from '../typography';\r\n\r\nexport default {\r\n  root: {\r\n    ...typography.body1,\r\n    borderBottom: `1px solid ${palette.divider}`\r\n  }\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nexport default {\r\n  root: {\r\n    backgroundColor: colors.grey[50]\r\n  }\r\n};\r\n","export default {\r\n  gutterBottom: {\r\n    marginBottom: 8\r\n  }\r\n};\r\n","import { createMuiTheme } from '@material-ui/core';\r\n\r\nimport palette from './palette';\r\nimport typography from './typography';\r\nimport overrides from './overrides';\r\n\r\nconst theme = createMuiTheme({\r\n  palette,\r\n  typography,\r\n  overrides,\r\n  zIndex: {\r\n    appBar: 1200,\r\n    drawer: 1100\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","const checked = (value, options) => {\r\n  if (value !== true) {\r\n    return options.message || 'must be checked';\r\n  }\r\n};\r\n\r\nexport default {\r\n  checked\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Paper, Input } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    borderRadius: '4px',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(1),\r\n    display: 'flex',\r\n    flexBasis: 420\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  input: {\r\n    flexGrow: 1,\r\n    fontSize: '14px',\r\n    lineHeight: '16px',\r\n    letterSpacing: '-0.05px'\r\n  }\r\n}));\r\n\r\nconst SearchInput = props => {\r\n  const { className, onChange, style, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      style={style}\r\n    >\r\n      <SearchIcon className={classes.icon} />\r\n      <Input\r\n        {...rest}\r\n        className={classes.input}\r\n        disableUnderline\r\n        onChange={onChange}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nSearchInput.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default SearchInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'inline-block',\r\n    borderRadius: '50%',\r\n    flexGrow: 0,\r\n    flexShrink: 0\r\n  },\r\n  sm: {\r\n    height: theme.spacing(1),\r\n    width: theme.spacing(1)\r\n  },\r\n  md: {\r\n    height: theme.spacing(2),\r\n    width: theme.spacing(2)\r\n  },\r\n  lg: {\r\n    height: theme.spacing(3),\r\n    width: theme.spacing(3)\r\n  },\r\n  neutral: {\r\n    backgroundColor: theme.palette.neutral\r\n  },\r\n  primary: {\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.info.main\r\n  },\r\n  warning: {\r\n    backgroundColor: theme.palette.warning.main\r\n  },\r\n  danger: {\r\n    backgroundColor: theme.palette.error.main\r\n  },\r\n  success: {\r\n    backgroundColor: theme.palette.success.main\r\n  }\r\n}));\r\n\r\nconst StatusBullet = props => {\r\n  const { className, size, color, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <span\r\n      {...rest}\r\n      className={clsx(\r\n        {\r\n          [classes.root]: true,\r\n          [classes[size]]: size,\r\n          [classes[color]]: color\r\n        },\r\n        className\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nStatusBullet.propTypes = {\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    'neutral',\r\n    'primary',\r\n    'info',\r\n    'success',\r\n    'warning',\r\n    'danger'\r\n  ]),\r\n  size: PropTypes.oneOf(['sm', 'md', 'lg'])\r\n};\r\n\r\nStatusBullet.defaultProps = {\r\n  size: 'md',\r\n  color: 'default'\r\n};\r\n\r\nexport default StatusBullet;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RouteWithLayout = props => {\r\n  const { layout: Layout, component: Component, ...rest } = props;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={matchProps => (\r\n        <Layout>\r\n          <Component {...matchProps} />\r\n        </Layout>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nRouteWithLayout.propTypes = {\r\n  component: PropTypes.any.isRequired,\r\n  layout: PropTypes.any.isRequired,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default RouteWithLayout;\r\n","import React from 'react';\r\nimport Helmet from 'react-helmet'\r\nconst PageTitleBar = props => {\r\n    return (\r\n        <div className='mt-3 ml-3'>\r\n            <Helmet>\r\n                <title>{props.title}</title>\r\n                <meta name=\"description\" content={props.description} />\r\n            </Helmet>\r\n            <h1>{props.title}</h1>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageTitleBar;","import React from 'react';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst Required = props => {\r\n    return (\r\n        <Tooltip title={'Este campo es requerido'} placement={props.placement}>\r\n          <span style={{color: 'red'}}>*</span>\r\n      </Tooltip>\r\n    );\r\n}\r\n\r\nexport default Required;","import React, { Component } from 'react';\r\nimport { Paper } from '@material-ui/core';\r\nimport Image from 'material-ui-image';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport './styles.scss';\r\nexport default class ImageUpload extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            image: ''\r\n        }\r\n    }\r\n\r\n    onChangeImage = (e) => {\r\n        // Make new FileReader\r\n        if (!e[0].type.includes('image')){\r\n            return\r\n        }\r\n        let reader = new FileReader();\r\n        let file = e[0]\r\n        // Convert the file to base64 text\r\n        reader.readAsDataURL(file);\r\n\r\n        // on reader load somthing...\r\n        reader.onload = () => {\r\n\r\n            // Make a fileInfo Object\r\n            let fileInfo = {\r\n                name: file.name,\r\n                type: file.type,\r\n                size: Math.round(file.size / 1000) + ' kB',\r\n                base64: reader.result,\r\n                file: file,\r\n            };\r\n            console.log(fileInfo);\r\n            this.setState({\r\n                image: reader.result\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { image } = this.state\r\n        return (\r\n            <div>\r\n                <Paper elevation={3} >\r\n                    <Image\r\n                        style={{ paddingTop: 'calc(70%)' }}\r\n                        src={image ? image : '/'}\r\n                    />\r\n                </Paper>\r\n                <div className='text-center pl-1 pb-1 mt-2'>\r\n                    <input\r\n                        accept=\"image/*\"\r\n                        className='upload-button'\r\n                        id=\"contained-button-file\"\r\n                        onChange={(e) => this.onChangeImage(e.target.files)}\r\n                        onClick={(event) => {\r\n                            event.currentTarget.value = null\r\n                        }}\r\n                        type=\"file\"\r\n                    />\r\n                    <label htmlFor=\"contained-button-file\">\r\n                        <Button variant=\"contained\"\r\n                            size=\"small\"\r\n                            color=\"inherit\"\r\n                            startIcon={<CloudUploadIcon />}\r\n                            component='span'\r\n                        >\r\n                            Cargar\r\n                        </Button>\r\n                    </label>\r\n                    <Button\r\n                        size=\"small\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        startIcon={<DeleteIcon />}\r\n                        className='ml-3'\r\n                        onClick={() => this.setState({ image: '/' })}\r\n                    >\r\n                        Quitar\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography/* , Link */ } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst Footer = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography variant=\"body1\">\r\n        &copy;{' '}\r\n        Chuta testa\r\n      </Typography>\r\n      <Typography variant=\"caption\">\r\n        All copyright\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Avatar, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    minHeight: 'fit-content'\r\n  },\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Profile = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const user = {\r\n    name: 'Shen Zhi',\r\n    avatar: '/images/avatars/avatar_11.png',\r\n    bio: 'Brain Director'\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Avatar\r\n        alt=\"Person\"\r\n        className={classes.avatar}\r\n        component={RouterLink}\r\n        src={user.avatar}\r\n        to=\"/settings\"\r\n      />\r\n      <Typography\r\n        className={classes.name}\r\n        variant=\"h4\"\r\n      >\r\n        {user.name}\r\n      </Typography>\r\n      <Typography variant=\"body2\">{user.bio}</Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Profile;\r\n","/* eslint-disable react/no-multi-comp */\r\n/* eslint-disable react/display-name */\r\nimport React, { forwardRef } from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { List, ListItem, Button, colors } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  button: {\r\n    color: colors.blueGrey[800],\r\n    padding: '10px 8px',\r\n    justifyContent: 'flex-start',\r\n    textTransform: 'none',\r\n    letterSpacing: 0,\r\n    width: '100%',\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  },\r\n  icon: {\r\n    color: theme.palette.icon,\r\n    width: 24,\r\n    height: 24,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    '& $icon': {\r\n      color: theme.palette.primary.main\r\n    }\r\n  }\r\n}));\r\n\r\nconst CustomRouterLink = forwardRef((props, ref) => (\r\n  <div\r\n    ref={ref}\r\n    style={{ flexGrow: 1 }}\r\n  >\r\n    <RouterLink {...props} />\r\n  </div>\r\n));\r\n\r\nconst SidebarNav = props => {\r\n  const { pages, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {pages.map(page => (\r\n        <ListItem\r\n          className={classes.item}\r\n          disableGutters\r\n          key={page.title}\r\n        >\r\n          <Button\r\n            activeClassName={classes.active}\r\n            className={classes.button}\r\n            component={CustomRouterLink}\r\n            to={page.href}\r\n          >\r\n            <div className={classes.icon}>{page.icon}</div>\r\n            {page.title}\r\n          </Button>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nSidebarNav.propTypes = {\r\n  className: PropTypes.string,\r\n  pages: PropTypes.array.isRequired\r\n};\r\n\r\nexport default SidebarNav;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {/*  Divider, */ Drawer } from '@material-ui/core';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\n\r\nimport { /* Profile, UpgradePlan, */ SidebarNav } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  drawer: {\r\n    width: 240,\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginTop: 64,\r\n      height: 'calc(100% - 64px)'\r\n    }\r\n  },\r\n  root: {\r\n    backgroundColor: theme.palette.white,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    padding: theme.spacing(2)\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  nav: {\r\n    marginBottom: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Sidebar = props => {\r\n  const { open, variant, onClose, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const pages = [\r\n    {\r\n      title: 'Dashboard',\r\n      href: '/dashboard',\r\n      icon: <DashboardIcon />\r\n    },\r\n    {\r\n      title: 'Ventas',\r\n      href: '/ventas',\r\n      icon: <ShoppingCartIcon />\r\n    },\r\n    {\r\n      title: 'Inventario',\r\n      href: '/inventario',\r\n      icon: <StorageIcon />\r\n    },\r\n    {\r\n      title: 'Productos',\r\n      href: '/productos',\r\n      icon: <FastfoodIcon />\r\n    },\r\n    {\r\n      title: 'Proveedores',\r\n      href: '/proveedores',\r\n      icon: <StoreIcon />\r\n    },\r\n    {\r\n      title: 'Orden de compra',\r\n      href: '/orden-de-compra',\r\n      icon: <StoreIcon />\r\n    },\r\n    {\r\n      title: 'Clientes',\r\n      href: '/clientes',\r\n      icon: <PersonIcon />\r\n    },\r\n    {\r\n      title: 'Historial de ventas',\r\n      href: '/historial',\r\n      icon: <HistoryIcon />\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"left\"\r\n      classes={{ paper: classes.drawer }}\r\n      onClose={onClose}\r\n      open={open}\r\n      variant={variant}\r\n    >\r\n      <div\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n      >\r\n        <SidebarNav\r\n          className={classes.nav}\r\n          pages={pages}\r\n        />\r\n      </div>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nSidebar.propTypes = {\r\n  className: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired,\r\n  variant: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, Button, colors } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: colors.grey[50]\r\n  },\r\n  media: {\r\n    paddingTop: theme.spacing(2),\r\n    height: 80,\r\n    textAlign: 'center',\r\n    '& > img': {\r\n      height: '100%',\r\n      width: 'auto'\r\n    }\r\n  },\r\n  content: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1, 2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  }\r\n}));\r\n\r\nconst UpgradePlan = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <div className={classes.media}>\r\n        <img\r\n          alt=\"Upgrade to PRO\"\r\n          src=\"/images/undraw_resume_folder_2_arse.svg\"\r\n        />\r\n      </div>\r\n      <div className={classes.content}>\r\n        <Typography\r\n          align=\"center\"\r\n          gutterBottom\r\n          variant=\"h6\"\r\n        >\r\n          Upgrade to PRO\r\n        </Typography>\r\n        <Typography\r\n          align=\"center\"\r\n          variant=\"body2\"\r\n        >\r\n          Upgrade to Devias Kit PRO and get even more components\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <Button\r\n          color=\"primary\"\r\n          component=\"a\"\r\n          href=\"https://devias.io/products/devias-kit-pro\"\r\n          variant=\"contained\"\r\n        >\r\n          Upgrade\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUpgradePlan.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UpgradePlan;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { AppBar, Toolbar, Badge, Hidden, IconButton } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport InputIcon from '@material-ui/icons/Input';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    boxShadow: 'none'\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1\r\n  },\r\n  signOutButton: {\r\n    marginLeft: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Topbar = props => {\r\n  const { className, onSidebarOpen, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [notifications] = useState([]);\r\n\r\n  return (\r\n    <AppBar\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Toolbar>\r\n        <RouterLink to=\"/\" style={{textDecoration: 'none'}}>\r\n          <h1 style={{color: 'white'}}>Chuta testa</h1>\r\n        </RouterLink>\r\n        <div className={classes.flexGrow} />\r\n        <Hidden mdDown>\r\n          <IconButton color=\"inherit\">\r\n            <Badge\r\n              badgeContent={notifications.length}\r\n              color=\"primary\"\r\n              variant=\"dot\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.signOutButton}\r\n            color=\"inherit\"\r\n          >\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={onSidebarOpen}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopbar.propTypes = {\r\n  className: PropTypes.string,\r\n  onSidebarOpen: PropTypes.func\r\n};\r\n\r\nexport default Topbar;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport { useMediaQuery } from '@material-ui/core';\r\n/* import PageTitleBar from 'Components' */\r\nimport { Sidebar, Topbar, Footer } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingTop: 56,\r\n    height: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingTop: 64\r\n    }\r\n  },\r\n  shiftContent: {\r\n    paddingLeft: 240\r\n  },\r\n  content: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst Main = props => {\r\n  const { children } = props;\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\r\n    defaultMatches: true\r\n  });\r\n\r\n  const [openSidebar, setOpenSidebar] = useState(false);\r\n\r\n  const handleSidebarOpen = () => {\r\n    setOpenSidebar(true);\r\n  };\r\n\r\n  const handleSidebarClose = () => {\r\n    setOpenSidebar(false);\r\n  };\r\n\r\n  const shouldOpenSidebar = isDesktop ? true : openSidebar;\r\n\r\n  return (\r\n    <div\r\n      className={clsx({\r\n        [classes.root]: true,\r\n        [classes.shiftContent]: isDesktop\r\n      })}\r\n    >\r\n      <Topbar onSidebarOpen={handleSidebarOpen} />\r\n      <Sidebar\r\n        onClose={handleSidebarClose}\r\n        open={shouldOpenSidebar}\r\n        variant={isDesktop ? 'persistent' : 'temporary'}\r\n      />\r\n      <main className={classes.content}>\r\n        {children}\r\n        <Footer />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nMain.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    boxShadow: 'none'\r\n  }\r\n}));\r\n\r\nconst Topbar = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      color=\"primary\"\r\n      position=\"fixed\"\r\n    >\r\n      <Toolbar>\r\n        <RouterLink to=\"/\" style={{textDecoration: 'none'}}>\r\n          <h1 style={{ color: 'white' }}>Chuta testa</h1>\r\n        </RouterLink>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Topbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport { Topbar } from './components';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    paddingTop: 64,\r\n    height: '100%'\r\n  },\r\n  content: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst Minimal = props => {\r\n  const { children } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Topbar />\r\n      <main className={classes.content}>{children}</main>\r\n    </div>\r\n  );\r\n};\r\n\r\nMinimal.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Minimal;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst AccountDetails = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({\r\n    firstName: 'Shen',\r\n    lastName: 'Zhi',\r\n    email: 'shen.zhi@devias.io',\r\n    phone: '',\r\n    state: 'Alabama',\r\n    country: 'USA'\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const states = [\r\n    {\r\n      value: 'alabama',\r\n      label: 'Alabama'\r\n    },\r\n    {\r\n      value: 'new-york',\r\n      label: 'New York'\r\n    },\r\n    {\r\n      value: 'san-francisco',\r\n      label: 'San Francisco'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                margin=\"dense\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.firstName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                margin=\"dense\"\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.lastName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                margin=\"dense\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                margin=\"dense\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phone}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select State\"\r\n                margin=\"dense\"\r\n                name=\"state\"\r\n                onChange={handleChange}\r\n                required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                SelectProps={{ native: true }}\r\n                value={values.state}\r\n                variant=\"outlined\"\r\n              >\r\n                {states.map(option => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Country\"\r\n                margin=\"dense\"\r\n                name=\"country\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.country}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Save details\r\n          </Button>\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAccountDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AccountDetails;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Typography,\r\n  Divider,\r\n  Button,\r\n  LinearProgress\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  details: {\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    marginLeft: 'auto',\r\n    height: 110,\r\n    width: 100,\r\n    flexShrink: 0,\r\n    flexGrow: 0\r\n  },\r\n  progress: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  uploadButton: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst AccountProfile = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const user = {\r\n    name: 'Shen Zhi',\r\n    city: 'Los Angeles',\r\n    country: 'USA',\r\n    timezone: 'GTM-7',\r\n    avatar: '/images/avatars/avatar_11.png'\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent>\r\n        <div className={classes.details}>\r\n          <div>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h2\"\r\n            >\r\n              John Doe\r\n            </Typography>\r\n            <Typography\r\n              className={classes.locationText}\r\n              color=\"textSecondary\"\r\n              variant=\"body1\"\r\n            >\r\n              {user.city}, {user.country}\r\n            </Typography>\r\n            <Typography\r\n              className={classes.dateText}\r\n              color=\"textSecondary\"\r\n              variant=\"body1\"\r\n            >\r\n              {moment().format('hh:mm A')} ({user.timezone})\r\n            </Typography>\r\n          </div>\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src={user.avatar}\r\n          />\r\n        </div>\r\n        <div className={classes.progress}>\r\n          <Typography variant=\"body1\">Profile Completeness: 70%</Typography>\r\n          <LinearProgress\r\n            value={70}\r\n            variant=\"determinate\"\r\n          />\r\n        </div>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions>\r\n        <Button\r\n          className={classes.uploadButton}\r\n          color=\"primary\"\r\n          variant=\"text\"\r\n        >\r\n          Upload picture\r\n        </Button>\r\n        <Button variant=\"text\">Remove picture</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAccountProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AccountProfile;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { AccountProfile, AccountDetails } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst Account = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={4}\r\n          md={6}\r\n          xl={4}\r\n          xs={12}\r\n        >\r\n          <AccountProfile />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={8}\r\n          md={6}\r\n          xl={8}\r\n          xs={12}\r\n        >\r\n          <AccountDetails />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  content: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    fontWeight: 700\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.error.main,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  icon: {\r\n    height: 32,\r\n    width: 32\r\n  },\r\n  difference: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  differenceIcon: {\r\n    color: theme.palette.error.dark\r\n  },\r\n  differenceValue: {\r\n    color: theme.palette.error.dark,\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Budget = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              className={classes.title}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"body2\"\r\n            >\r\n              BUDGET\r\n            </Typography>\r\n            <Typography variant=\"h3\">$24,000</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <MoneyIcon className={classes.icon} />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <div className={classes.difference}>\r\n          <ArrowDownwardIcon className={classes.differenceIcon} />\r\n          <Typography\r\n            className={classes.differenceValue}\r\n            variant=\"body2\"\r\n          >\r\n            12%\r\n          </Typography>\r\n          <Typography\r\n            className={classes.caption}\r\n            variant=\"caption\"\r\n          >\r\n            Since last month\r\n          </Typography>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nBudget.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Budget;\r\n","import uuid from 'uuid/v1';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1049',\r\n    amount: 30.5,\r\n    customer: {\r\n      name: 'Ekaterina Tankova'\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: 'pending'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1048',\r\n    amount: 25.1,\r\n    customer: {\r\n      name: 'Cao Yu'\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: 'delivered'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1047',\r\n    amount: 10.99,\r\n    customer: {\r\n      name: 'Alexa Richardson'\r\n    },\r\n    createdAt: 1554930000000,\r\n    status: 'refunded'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1046',\r\n    amount: 96.43,\r\n    customer: {\r\n      name: 'Anje Keizer'\r\n    },\r\n    createdAt: 1554757200000,\r\n    status: 'pending'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1045',\r\n    amount: 32.54,\r\n    customer: {\r\n      name: 'Clarke Gillebert'\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: 'delivered'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1044',\r\n    amount: 16.76,\r\n    customer: {\r\n      name: 'Adam Denisov'\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: 'delivered'\r\n  }\r\n];\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  CardContent,\r\n  Button,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Tooltip,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nimport mockData from './data';\r\nimport { StatusBullet } from 'components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 800\r\n  },\r\n  statusContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  status: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst statusColors = {\r\n  delivered: 'success',\r\n  pending: 'info',\r\n  refunded: 'danger'\r\n};\r\n\r\nconst LatestOrders = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [orders] = useState(mockData);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader\r\n        action={\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n          >\r\n            New entry\r\n          </Button>\r\n        }\r\n        title=\"Latest Orders\"\r\n      />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Order Ref</TableCell>\r\n                  <TableCell>Customer</TableCell>\r\n                  <TableCell sortDirection=\"desc\">\r\n                    <Tooltip\r\n                      enterDelay={300}\r\n                      title=\"Sort\"\r\n                    >\r\n                      <TableSortLabel\r\n                        active\r\n                        direction=\"desc\"\r\n                      >\r\n                        Date\r\n                      </TableSortLabel>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                  <TableCell>Status</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {orders.map(order => (\r\n                  <TableRow\r\n                    hover\r\n                    key={order.id}\r\n                  >\r\n                    <TableCell>{order.ref}</TableCell>\r\n                    <TableCell>{order.customer.name}</TableCell>\r\n                    <TableCell>\r\n                      {moment(order.createdAt).format('DD/MM/YYYY')}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <div className={classes.statusContainer}>\r\n                        <StatusBullet\r\n                          className={classes.status}\r\n                          color={statusColors[order.status]}\r\n                          size=\"sm\"\r\n                        />\r\n                        {order.status}\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions className={classes.actions}>\r\n        <Button\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all <ArrowRightIcon />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestOrders.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LatestOrders;\r\n","import uuid from 'uuid/v1';\r\nimport moment from 'moment';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    name: 'Dropbox',\r\n    imageUrl: '/images/products/product_1.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Medium Corporation',\r\n    imageUrl: '/images/products/product_2.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Slack',\r\n    imageUrl: '/images/products/product_3.png',\r\n    updatedAt: moment().subtract(3, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Lyft',\r\n    imageUrl: '/images/products/product_4.png',\r\n    updatedAt: moment().subtract(5, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'GitHub',\r\n    imageUrl: '/images/products/product_5.png',\r\n    updatedAt: moment().subtract(9, 'hours')\r\n  }\r\n];\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  IconButton\r\n} from '@material-ui/core';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport mockData from './data';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  image: {\r\n    height: 48,\r\n    width: 48\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst LatestProducts = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [products] = useState(mockData);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader\r\n        subtitle={`${products.length} in total`}\r\n        title=\"Latest products\"\r\n      />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <List>\r\n          {products.map((product, i) => (\r\n            <ListItem\r\n              divider={i < products.length - 1}\r\n              key={product.id}\r\n            >\r\n              <ListItemAvatar>\r\n                <img\r\n                  alt=\"Product\"\r\n                  className={classes.image}\r\n                  src={product.imageUrl}\r\n                />\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={product.name}\r\n                secondary={`Updated ${product.updatedAt.fromNow()}`}\r\n              />\r\n              <IconButton\r\n                edge=\"end\"\r\n                size=\"small\"\r\n              >\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions className={classes.actions}>\r\n        <Button\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all <ArrowRightIcon />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestProducts.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LatestProducts;\r\n","import palette from 'theme/palette';\r\n\r\nexport const data = {\r\n  labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug'],\r\n  datasets: [\r\n    {\r\n      label: 'This year',\r\n      backgroundColor: palette.primary.main,\r\n      data: [18, 5, 19, 27, 29, 19, 20]\r\n    },\r\n    {\r\n      label: 'Last year',\r\n      backgroundColor: palette.neutral,\r\n      data: [11, 20, 12, 29, 30, 25, 13]\r\n    }\r\n  ]\r\n};\r\n\r\nexport const options = {\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  animation: false,\r\n  legend: { display: false },\r\n  cornerRadius: 20,\r\n  tooltips: {\r\n    enabled: true,\r\n    mode: 'index',\r\n    intersect: false,\r\n    borderWidth: 1,\r\n    borderColor: palette.divider,\r\n    backgroundColor: palette.white,\r\n    titleFontColor: palette.text.primary,\r\n    bodyFontColor: palette.text.secondary,\r\n    footerFontColor: palette.text.secondary\r\n  },\r\n  layout: { padding: 0 },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        barThickness: 12,\r\n        maxBarThickness: 10,\r\n        barPercentage: 0.5,\r\n        categoryPercentage: 0.5,\r\n        ticks: {\r\n          fontColor: palette.text.secondary\r\n        },\r\n        gridLines: {\r\n          display: false,\r\n          drawBorder: false\r\n        }\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          fontColor: palette.text.secondary,\r\n          beginAtZero: true,\r\n          min: 0\r\n        },\r\n        gridLines: {\r\n          borderDash: [2],\r\n          borderDashOffset: [2],\r\n          color: palette.divider,\r\n          drawBorder: false,\r\n          zeroLineBorderDash: [2],\r\n          zeroLineBorderDashOffset: [2],\r\n          zeroLineColor: palette.divider\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Button\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nimport { data, options } from './chart';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  chartContainer: {\r\n    height: 400,\r\n    position: 'relative'\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst LatestSales = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader\r\n        action={\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"text\"\r\n          >\r\n            Last 7 days <ArrowDropDownIcon />\r\n          </Button>\r\n        }\r\n        title=\"Latest Sales\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <div className={classes.chartContainer}>\r\n          <Bar\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </div>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions className={classes.actions}>\r\n        <Button\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          Overview <ArrowRightIcon />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestSales.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LatestSales;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  Avatar,\r\n  LinearProgress\r\n} from '@material-ui/core';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  content: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    fontWeight: 700\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  icon: {\r\n    height: 32,\r\n    width: 32\r\n  },\r\n  progress: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst TasksProgress = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              className={classes.title}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"body2\"\r\n            >\r\n              TASKS PROGRESS\r\n            </Typography>\r\n            <Typography variant=\"h3\">75.5%</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <InsertChartIcon className={classes.icon} />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <LinearProgress\r\n          className={classes.progress}\r\n          value={75.5}\r\n          variant=\"determinate\"\r\n        />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTasksProgress.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TasksProgress;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText\r\n  },\r\n  content: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    fontWeight: 700\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.white,\r\n    color: theme.palette.primary.main,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  icon: {\r\n    height: 32,\r\n    width: 32\r\n  }\r\n}));\r\n\r\nconst TotalProfit = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              className={classes.title}\r\n              color=\"inherit\"\r\n              gutterBottom\r\n              variant=\"body2\"\r\n            >\r\n              TOTAL PROFIT\r\n            </Typography>\r\n            <Typography\r\n              color=\"inherit\"\r\n              variant=\"h3\"\r\n            >\r\n              $23,200\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <AttachMoneyIcon className={classes.icon} />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalProfit.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalProfit;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  content: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    fontWeight: 700\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.success.main,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  icon: {\r\n    height: 32,\r\n    width: 32\r\n  },\r\n  difference: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  differenceIcon: {\r\n    color: theme.palette.success.dark\r\n  },\r\n  differenceValue: {\r\n    color: theme.palette.success.dark,\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst TotalUsers = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              className={classes.title}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"body2\"\r\n            >\r\n              TOTAL USERS\r\n            </Typography>\r\n            <Typography variant=\"h3\">1,600</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <PeopleIcon className={classes.icon} />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <div className={classes.difference}>\r\n          <ArrowUpwardIcon className={classes.differenceIcon} />\r\n          <Typography\r\n            className={classes.differenceValue}\r\n            variant=\"body2\"\r\n          >\r\n            16%\r\n          </Typography>\r\n          <Typography\r\n            className={classes.caption}\r\n            variant=\"caption\"\r\n          >\r\n            Since last month\r\n          </Typography>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalUsers.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalUsers;\r\n","import React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  IconButton,\r\n  Divider,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  chartContainer: {\r\n    position: 'relative',\r\n    height: '300px'\r\n  },\r\n  stats: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  device: {\r\n    textAlign: 'center',\r\n    padding: theme.spacing(1)\r\n  },\r\n  deviceIcon: {\r\n    color: theme.palette.icon\r\n  }\r\n}));\r\n\r\nconst UsersByDevice = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [63, 15, 22],\r\n        backgroundColor: [\r\n          theme.palette.primary.main,\r\n          theme.palette.error.main,\r\n          theme.palette.warning.main\r\n        ],\r\n        borderWidth: 8,\r\n        borderColor: theme.palette.white,\r\n        hoverBorderColor: theme.palette.white\r\n      }\r\n    ],\r\n    labels: ['Desktop', 'Tablet', 'Mobile']\r\n  };\r\n\r\n  const options = {\r\n    legend: {\r\n      display: false\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    tooltips: {\r\n      enabled: true,\r\n      mode: 'index',\r\n      intersect: false,\r\n      borderWidth: 1,\r\n      borderColor: theme.palette.divider,\r\n      backgroundColor: theme.palette.white,\r\n      titleFontColor: theme.palette.text.primary,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      footerFontColor: theme.palette.text.secondary\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Desktop',\r\n      value: '63',\r\n      icon: <LaptopMacIcon />,\r\n      color: theme.palette.primary.main\r\n    },\r\n    {\r\n      title: 'Tablet',\r\n      value: '15',\r\n      icon: <TabletMacIcon />,\r\n      color: theme.palette.error.main\r\n    },\r\n    {\r\n      title: 'Mobile',\r\n      value: '23',\r\n      icon: <PhoneIphoneIcon />,\r\n      color: theme.palette.warning.main\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader\r\n        action={\r\n          <IconButton size=\"small\">\r\n            <RefreshIcon />\r\n          </IconButton>\r\n        }\r\n        title=\"Users By Device\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <div className={classes.chartContainer}>\r\n          <Doughnut\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </div>\r\n        <div className={classes.stats}>\r\n          {devices.map(device => (\r\n            <div\r\n              className={classes.device}\r\n              key={device.title}\r\n            >\r\n              <span className={classes.deviceIcon}>{device.icon}</span>\r\n              <Typography variant=\"body1\">{device.title}</Typography>\r\n              <Typography\r\n                style={{ color: device.color }}\r\n                variant=\"h2\"\r\n              >\r\n                {device.value}%\r\n              </Typography>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUsersByDevice.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UsersByDevice;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport {\r\n  /* Budget, */\r\n  TotalUsers,\r\n  TasksProgress,\r\n  TotalProfit,\r\n  LatestSales,\r\n  UsersByDevice,\r\n  LatestProducts,\r\n  LatestOrders\r\n} from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        \r\n        <Grid\r\n          item\r\n          lg={3}\r\n          sm={6}\r\n          xl={3}\r\n          xs={12}\r\n        >\r\n          <TotalUsers />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={3}\r\n          sm={6}\r\n          xl={3}\r\n          xs={12}\r\n        >\r\n          <TasksProgress />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={3}\r\n          sm={6}\r\n          xl={3}\r\n          xs={12}\r\n        >\r\n          <TotalProfit />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={8}\r\n          md={12}\r\n          xl={9}\r\n          xs={12}\r\n        >\r\n          <LatestSales />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={4}\r\n          md={6}\r\n          xl={3}\r\n          xs={12}\r\n        >\r\n          <UsersByDevice />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={4}\r\n          md={6}\r\n          xl={3}\r\n          xs={12}\r\n        >\r\n          <LatestProducts />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={8}\r\n          md={12}\r\n          xl={9}\r\n          xs={12}\r\n        >\r\n          <LatestOrders />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  },\r\n  content: {\r\n    paddingTop: 150,\r\n    textAlign: 'center'\r\n  },\r\n  image: {\r\n    marginTop: 50,\r\n    display: 'inline-block',\r\n    maxWidth: '100%',\r\n    width: 560\r\n  }\r\n}));\r\n\r\nconst NotFound = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={6}\r\n          xs={12}\r\n        >\r\n          <div className={classes.content}>\r\n            <Typography variant=\"h1\">\r\n              404: Página no encontrada.\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              Está página no fue encontrada en este servidor.\r\n            </Typography>\r\n            <img\r\n              alt=\"Under development\"\r\n              className={classes.image}\r\n              src=\"/images/undraw_page_not_found_su7k.svg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  },\r\n  iframe: {\r\n    width: '100%',\r\n    minHeight: 640,\r\n    border: 0\r\n  }\r\n}));\r\n\r\nconst Icons = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <iframe\r\n        className={classes.iframe}\r\n        src=\"https://material.io/tools/icons/?icon=accessibility&style=outline\"\r\n        title=\"Material Design icons\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Icons;\r\n","// utils/API.js\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://\" + window.location.hostname + \"/api\",\r\n  responseType: \"json\",\r\n  headers: {'Accept': 'application/json'}\r\n\r\n});\r\n","import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst columns = ['Nombre', 'Cantidad', 'Acciones', 'Costo']\r\n\r\nexport default class ModalProductTable extends Component {\r\n\r\n    render() {\r\n        const { products } = this.props\r\n        return (\r\n            <Paper style={{ width: '100%' }}>\r\n                <TableContainer style={{ maxHeight: '440px' }}>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {columns.map((column, key) => (\r\n                                    <TableCell\r\n                                        key={key}\r\n                                    >\r\n                                        {column}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                products && products.length === 0 &&\r\n                                <TableRow tabIndex={-1} >\r\n                                    <TableCell align=\"center\" colSpan={3}>\r\n                                        No se han agregado ingredientes.\r\n                                        </TableCell>\r\n                                </TableRow>\r\n                            }\r\n                            {\r\n                                products && products.map((product, key) => {\r\n                                    return (\r\n                                        <TableRow key={key} hover role=\"checkbox\" tabIndex={-1} >\r\n                                            <TableCell>\r\n                                                {product.name}\r\n                                            </TableCell>\r\n                                            <TableCell >\r\n                                                {product.quantity}\r\n                                            </TableCell>\r\n                                            <TableCell >\r\n                                                {product.actions}\r\n                                            </TableCell>\r\n                                            <TableCell >\r\n                                                {product.cost}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })\r\n                            }\r\n                            {\r\n                                products && products.length > 0 &&\r\n                                    <TableRow role=\"checkbox\" tabIndex={-1} >\r\n                                        <TableCell rowSpan={3}></TableCell>\r\n                                        <TableCell colSpan={2} align='center'>\r\n                                            Total\r\n                                        </TableCell>\r\n                                        <TableCell >\r\n                                            {\r\n                                                products.reduce((prev,next) => prev + parseInt(next.cost,10),0 )\r\n                                            }\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Paper>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col } from 'reactstrap';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nexport default class AlertInput extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            inputQuantity: 1\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        const value = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: value\r\n        });\r\n    }\r\n    \r\n    onSubmitQuantity = (e) => {\r\n        e.preventDefault()\r\n        this.props.onConfirmAddProduct(this.state.inputQuantity,this.props.value)\r\n    }\r\n    render() {\r\n        const { modalTitle, isOpen, value } = this.props;\r\n        return (\r\n            <Modal isOpen={isOpen} zIndex={1211} centered toggle={this.props.toggle}>\r\n                <form onSubmit={this.onSubmitQuantity}>\r\n                    <ModalHeader>{modalTitle}</ModalHeader>\r\n                    <ModalBody>\r\n                        {value &&\r\n                            <div className='row'>\r\n                                <div className='col-12'>\r\n                                    <Typography variant='h5' gutterBottom>\r\n                                        Articulo: {value.nombre}\r\n                                    </Typography>\r\n                                    {value.unidad_de_medida &&\r\n                                        <div>\r\n                                            <Typography variant='h5' gutterBottom>\r\n                                                Unidad de medida: {value.unidad_de_medida && value.unidad_de_medida}\r\n                                            </Typography>\r\n\r\n                                            <Alert severity='warning' icon={false}>Utilice una cantidad correcta en base a la unidad de medida que se muestra arriba, un error en este dato puede ocacionar inconsistencias en el sistema. </Alert>\r\n                                        </div>\r\n                                    }\r\n\r\n                                    <Typography variant='subtitle2' gutterBottom>\r\n                                        Cantidad {value.unidad_de_medida && 'en ' + value.unidad_de_medida + 's'}\r\n                                    </Typography>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"outlined-number\"\r\n                            label=\"Cantidad\"\r\n                            type=\"number\"\r\n                            min='1'\r\n                            name='inputQuantity'\r\n                            value={this.state.inputQuantity}\r\n                            onChange={this.handleChange}\r\n                            variant=\"outlined\"\r\n                            required\r\n                        />\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color='primary' >Agregar cantidad</Button>{' '}\r\n                        <Button color='secondary' onClick={this.props.cancelModal} >Cancelar</Button>\r\n                    </ModalFooter>\r\n                </form>\r\n            </Modal>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { default as MaterialButton } from '@material-ui/core/Button';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport API from 'utils/API';\r\nimport { Typography } from '@material-ui/core';\r\nimport ModalProductTable from '../ModalProductTable';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport ImageUpload from 'components/ImageUpload';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AlertInput from '../AlertInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\n\r\nexport default class ModalBaseProduct extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            stockSelect: '',\r\n            stock: [],\r\n            ingredients: [],\r\n            alertQuantity: false,\r\n            alertQuantityItem: undefined\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getStock()\r\n    }\r\n\r\n    getStock = () => {\r\n        API.get('/get_stock.php')\r\n            .then((response) => {\r\n                response.data.status === 'success' ?\r\n                    this.setState({\r\n                        stock: response.data.data\r\n                    })\r\n                    :\r\n                    console.log('Error')\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    getIngredientCost = (measure, price, quantity) => {\r\n\r\n        let precio = measure === 'Kilogramo' ?\r\n            //Calculo para kilos\r\n            (price) * quantity\r\n            :\r\n            measure === 'Pieza' ?\r\n                //Calculo para piezas\r\n                price * quantity\r\n                :\r\n                //Calculo para litros\r\n                measure === 'Litro' ?\r\n                    price * quantity\r\n                    :\r\n                    ''\r\n        return precio\r\n    }\r\n\r\n    handleSelectIngredient = (event) => {\r\n        const value = event.target.value\r\n        this.setState({\r\n            alertQuantity: true,\r\n            alertQuantityItem: value\r\n        })\r\n    }\r\n\r\n    onChangeQuantity = (event, ingredient) => {\r\n        let quantity = event.target.value\r\n        let verifyIngredient = this.state.ingredients.filter((ingrediente) => {\r\n            return ingrediente.id_stock === ingredient.id_stock\r\n        })\r\n        verifyIngredient.quantityValue = quantity\r\n        verifyIngredient.cost = this.getIngredientCost(ingredient.unidad_de_medida, ingredient.precio, quantity)\r\n        console.log(this.state.ingredients)\r\n        this.setState({})\r\n    }\r\n\r\n    onConfirmAddProduct = (value, product) => {\r\n\r\n        let verifyIngredient = this.state.ingredients.filter((ingrediente) => {\r\n            return product.id_stock ?\r\n                ingrediente.id_stock === product.id_stock\r\n                :\r\n                ingrediente.id_base_product === product.id_base_product\r\n        })\r\n        if (verifyIngredient.length > 0) {\r\n            verifyIngredient[0].quantity = parseInt(verifyIngredient[0].quantity, 10) + parseInt(value, 10)\r\n            this.setState({\r\n                alertQuantity: false,\r\n            })\r\n            return\r\n        }\r\n\r\n\r\n        let ingredient = {}\r\n        product.id_stock ?\r\n            ingredient = {\r\n                id_stock: product.id_stock,\r\n                name: product.nombre,\r\n                quantityValue: value,\r\n                cost: this.getIngredientCost(product.unidad_de_medida, product.precio, parseInt(value, 10)),\r\n                quantity: <FormControl variant=\"outlined\" style={{ width: '12ch' }}>\r\n                    <OutlinedInput\r\n                        id=\"outlined-adornment-weight\"\r\n                        /* value={values.weight} */\r\n                        onChange={(e) => this.onChangeQuantity(e, product)}\r\n                        endAdornment={<InputAdornment position=\"end\">\r\n                            {product.unidad_de_medida === 'Pieza' && 'Pz'}\r\n                            {product.unidad_de_medida === 'Kilogramo' && 'Kg'}\r\n                            {product.unidad_de_medida === 'Litro' && 'L'}\r\n                        </InputAdornment>}\r\n                        defaultValue={value}\r\n                        labelWidth={0}\r\n                        type='number'\r\n                    />\r\n                </FormControl>\r\n                ,\r\n                measure: product.unidad_de_medida,\r\n                actions: <IconButton aria-label=\"delete\" onClick={() => this.deleteIngredient(product)}>\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            }\r\n            :\r\n            ingredient = {\r\n                id_base_product: product.id_base_product,\r\n                quantityValue: value,\r\n                cost: this.getIngredientCost(product.unidad_de_medida, product.precio, parseInt(value, 10)),\r\n                quantity: <FormControl variant=\"outlined\" style={{ width: '12ch' }}>\r\n                    <OutlinedInput\r\n                        fullWidth\r\n                        id=\"outlined-adornment-weight\"\r\n                        /* value={values.weight} */\r\n                        onChange={(e) => this.onChangeQuantity(e, product)}\r\n                        endAdornment={<InputAdornment position=\"end\">\r\n                            {product.unidad_de_medida === 'Pieza' && 'Pz'}\r\n                            {product.unidad_de_medida === 'Kilogramo' && 'Kg'}\r\n                            {product.unidad_de_medida === 'Litro' && 'L'}\r\n                        </InputAdornment>}\r\n                        defaultValue={value}\r\n                        labelWidth={0}\r\n                        type='number'\r\n                    />\r\n                </FormControl>,\r\n                measure: product.unidad_de_medida,\r\n                actions: <IconButton aria-label=\"delete\" onClick={() => this.deleteIngredient(product)}>\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            }\r\n            \r\n        this.setState({\r\n            alertQuantity: false,\r\n            ingredients: [...this.state.ingredients, ingredient]\r\n        })\r\n    }\r\n\r\n    deleteIngredient = (product) => {\r\n        let newIngredients = this.state.ingredients.filter((ingrediente) => {\r\n            return product.id_stock ?\r\n                ingrediente.id_stock !== product.id_stock && ingrediente.name !== product.nombre\r\n                :\r\n                ingrediente.id_base_product !== product.id_base_product && ingrediente.name !== product.nombre\r\n        })\r\n        this.setState({\r\n            ingredients: newIngredients\r\n        })\r\n    }\r\n\r\n    onSubmitModal = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        const { productName, productDescription, stockSelect, stock } = this.state\r\n        const { isOpen, modalTitle, } = this.props\r\n        return (<div>\r\n            <Modal isOpen={isOpen} size='lg' zIndex={1211} >\r\n                <ModalHeader>{modalTitle}</ModalHeader>\r\n                <Form onSubmit={this.onSubmitModal} autoComplete='off'>\r\n                    <ModalBody>\r\n                        <Container>\r\n\r\n                            <Row>\r\n                                <Col sm='6'>\r\n                                    <Typography variant='subtitle2' gutterBottom>\r\n                                        Información general.\r\n                                    </Typography>\r\n                                    <TextField className='mb-3' fullWidth id='productName' label='Nombre' name='productName' variant='outlined' onChange={this.handleChange} value={productName} required />\r\n                                </Col>\r\n                                <Col sm='6'>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        id=\"productDescription\"\r\n                                        label=\"Descripción\"\r\n                                        multiline\r\n                                        name='productDescription'\r\n                                        rows={5}\r\n                                        value={productDescription}\r\n                                        onChange={this.handleChange}\r\n                                        variant='outlined'\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col sm='12'>\r\n                                    <Typography variant='subtitle2' gutterBottom>\r\n                                        Ingredientes.\r\n                                    </Typography>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        id='stockSelect'\r\n                                        select\r\n                                        label='Articulos de inventario'\r\n                                        name='stockSelect'\r\n                                        value={stockSelect}\r\n                                        onChange={this.handleSelectIngredient}\r\n                                        helperText='Articulos de inventario.'\r\n                                        variant='outlined'\r\n                                    >\r\n                                        {stock && stock.map((stockItem, key) => {\r\n                                            return (\r\n                                                <MenuItem key={key} value={stockItem}>\r\n                                                    {stockItem.nombre}\r\n                                                </MenuItem>\r\n                                            );\r\n                                        })}\r\n                                    </TextField>\r\n                                    <ModalProductTable\r\n                                        products={this.state.ingredients}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color='primary' >Agregar producto</Button>{' '}\r\n                        <Button color='secondary' onClick={this.props.cancelModal} >Cancelar</Button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n            <AlertInput\r\n                modalTitle='Agregar cantidad'\r\n                isOpen={this.state.alertQuantity}\r\n                value={this.state.alertQuantityItem}\r\n                cancelModal={() => this.setState({ alertQuantity: false })}\r\n                toggle={() => this.setState({ alertQuantity: !this.state.alertQuantity })}\r\n                onConfirmAddProduct={this.onConfirmAddProduct}\r\n            />\r\n        </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { default as MaterialButton } from '@material-ui/core/Button';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport API from 'utils/API';\r\nimport { Typography } from '@material-ui/core';\r\nimport ModalProductTable from '../ModalProductTable';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport ImageUpload from 'components/ImageUpload';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AlertInput from '../AlertInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport ModalBaseProduct from '../ModalBaseProduct'\r\nexport default class ModalProduct extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            sweetAlert: null,\r\n            productName: '',\r\n            productCategory: '',\r\n            stockSelect: '',\r\n            baseProductSelect: '',\r\n            productDescription: '',\r\n            categories: [],\r\n            stock: [],\r\n            baseProducts: [],\r\n            alertQuantity: false,\r\n            pictures: [],\r\n            ingredients: [],\r\n            baseProductModal: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCategories()\r\n        this.getStock()\r\n        this.getBaseProducts()\r\n    }\r\n\r\n    onDrop = (pictureFiles, pictureDataURLs) => {\r\n        this.setState({\r\n            pictures: this.state.pictures.concat(pictureFiles)\r\n        });\r\n    }\r\n\r\n    handleSelectIngredient = (event) => {\r\n        const value = event.target.value\r\n        this.setState({\r\n            alertQuantity: true,\r\n            alertQuantityItem: value\r\n        })\r\n    }\r\n\r\n    onChangeQuantity = (event, ingredient) => {\r\n        console.log(event.target.value, ingredient)\r\n    }\r\n\r\n    getIngredientCost = (measure, price, quantity) => {\r\n\r\n        let precio = measure === 'Kilogramo' ?\r\n            //Calculo para kilos\r\n            (price) * quantity\r\n            :\r\n            measure === 'Pieza' ?\r\n                //Calculo para piezas\r\n                price * quantity\r\n                :\r\n                //Calculo para litros\r\n                measure === 'Litro' ?\r\n                    price * quantity\r\n                    :\r\n                    ''\r\n        console.log(precio)\r\n        return precio\r\n    }\r\n\r\n    onConfirmAddProduct = (value, product) => {\r\n\r\n        let verifyIngredient = this.state.ingredients.filter((ingrediente) => {\r\n            return product.id_stock ?\r\n                ingrediente.id_stock === product.id_stock\r\n                :\r\n                ingrediente.id_base_product === product.id_base_product\r\n        })\r\n        if (verifyIngredient.length > 0) {\r\n            verifyIngredient[0].quantity = parseInt(verifyIngredient[0].quantity, 10) + parseInt(value, 10)\r\n            this.setState({\r\n                alertQuantity: false,\r\n            })\r\n            return\r\n        }\r\n\r\n\r\n        let ingredient = {}\r\n        product.id_stock ?\r\n            ingredient = {\r\n                id_stock: product.id_stock,\r\n                name: product.nombre,\r\n                quantityValue: value,\r\n                cost: this.getIngredientCost(product.unidad_de_medida, product.precio, parseInt(value, 10)),\r\n                quantity: <FormControl variant=\"outlined\" style={{ width: '12ch' }}>\r\n                    <OutlinedInput\r\n                        id=\"outlined-adornment-weight\"\r\n                        /* value={values.weight} */\r\n                        onChange={(e) => this.onChangeQuantity(e, product)}\r\n                        endAdornment={<InputAdornment position=\"end\">\r\n                            {product.unidad_de_medida === 'Pieza' && 'Pz'}\r\n                            {product.unidad_de_medida === 'Kilogramo' && 'Kg'}\r\n                            {product.unidad_de_medida === 'Litro' && 'L'}\r\n                        </InputAdornment>}\r\n                        defaultValue={value}\r\n                        labelWidth={0}\r\n                        type='number'\r\n                    />\r\n                </FormControl>\r\n                ,\r\n                measure: product.unidad_de_medida,\r\n                actions: <IconButton aria-label=\"delete\" onClick={() => this.deleteIngredient(product)}>\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            }\r\n            :\r\n            ingredient = {\r\n                id_base_product: product.id_base_product,\r\n                quantityValue: value,\r\n                cost: this.getIngredientCost(product.unidad_de_medida, product.precio, parseInt(value, 10)),\r\n                quantity: <FormControl variant=\"outlined\" style={{ width: '12ch' }}>\r\n                    <OutlinedInput\r\n                        fullWidth\r\n                        id=\"outlined-adornment-weight\"\r\n                        /* value={values.weight} */\r\n                        onChange={(e) => this.onChangeQuantity(e, product)}\r\n                        endAdornment={<InputAdornment position=\"end\">\r\n                            {product.unidad_de_medida === 'Pieza' && 'Pz'}\r\n                            {product.unidad_de_medida === 'Kilogramo' && 'Kg'}\r\n                            {product.unidad_de_medida === 'Litro' && 'L'}\r\n                        </InputAdornment>}\r\n                        defaultValue={value}\r\n                        labelWidth={0}\r\n                        type='number'\r\n                    />\r\n                </FormControl>,\r\n                measure: product.unidad_de_medida,\r\n                actions: <IconButton aria-label=\"delete\" onClick={() => this.deleteIngredient(product)}>\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            }\r\n        this.setState({\r\n            alertQuantity: false,\r\n            ingredients: [...this.state.ingredients, ingredient]\r\n        })\r\n    }\r\n\r\n    //Delete ingredient from list\r\n    deleteIngredient = (product) => {\r\n        let newIngredients = this.state.ingredients.filter((ingrediente) => {\r\n            return product.id_stock ?\r\n                ingrediente.id_stock !== product.id_stock && ingrediente.name !== product.nombre\r\n                :\r\n                ingrediente.id_base_product !== product.id_base_product && ingrediente.name !== product.nombre\r\n        })\r\n        this.setState({\r\n            ingredients: newIngredients\r\n        })\r\n    }\r\n\r\n\r\n    getBaseProducts = () => {\r\n        API.get('/get_stock.php')\r\n            .then((response) => {\r\n                response.data.status === 'success' ?\r\n                    this.setState({\r\n                        baseProducts: response.data.data\r\n                    })\r\n                    :\r\n                    console.log('Error')\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    getStock = () => {\r\n        API.get('/get_stock.php')\r\n            .then((response) => {\r\n                response.data.status === 'success' ?\r\n                    this.setState({\r\n                        stock: response.data.data\r\n                    })\r\n                    :\r\n                    console.log('Error')\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    getCategories = () => {\r\n        API.get('/get_categories.php')\r\n            .then((response) => {\r\n                response.data.status === 'success' ?\r\n                    this.setState({\r\n                        categories: response.data.data\r\n                    })\r\n                    :\r\n                    console.log('Error')\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    onSubmitModal = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state)\r\n\r\n    }\r\n    handleChange = event => {\r\n        const value = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { modalTitle, isOpen } = this.props;\r\n        const { productDescription, alertQuantity, productName, productCategory, categories, stockSelect, stock, baseProducts, baseProductSelect } = this.state;\r\n        return (\r\n            <div>\r\n                <Modal isOpen={isOpen} size={'xl'} zIndex={1210} >\r\n                    <ModalHeader>{modalTitle}</ModalHeader>\r\n                    <Form onSubmit={this.onSubmitModal} autoComplete='off'>\r\n                        <ModalBody>\r\n                            <Container>\r\n                                <Typography variant='subtitle2' gutterBottom>\r\n                                    Información general.\r\n                                    </Typography>\r\n                                <Row>\r\n                                    <Col sm='6' className='mb-3'>\r\n                                        <ImageUpload\r\n\r\n                                        />\r\n                                    </Col>\r\n                                    <Col sm='6' >\r\n                                        <TextField className='mb-3' fullWidth id='productName' label='Nombre' name='productName' variant='outlined' onChange={this.handleChange} value={productName} required />\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            id='productCategory'\r\n                                            select\r\n                                            label='Categoria'\r\n                                            name='productCategory'\r\n                                            value={productCategory}\r\n                                            onChange={this.handleChange}\r\n                                            helperText='Selecciona una categoria'\r\n                                            variant='outlined'\r\n                                        >\r\n                                            {categories && categories.map((category, key) => {\r\n                                                return (\r\n                                                    <MenuItem key={key} value={category.id_categoria}>\r\n                                                        {category.nombre}\r\n                                                    </MenuItem>\r\n                                                );\r\n                                            })}\r\n                                        </TextField>\r\n                                        <MaterialButton size='small' color='primary' style={{ textTransform: 'initial' }}>Crear categoría</MaterialButton>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            id=\"productDescription\"\r\n                                            label=\"Descripción\"\r\n                                            multiline\r\n                                            name='productDescription'\r\n                                            rows={5}\r\n                                            value={productDescription}\r\n                                            onChange={this.handleChange}\r\n                                            variant='outlined'\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Typography variant='subtitle2' gutterBottom>\r\n                                    Ingredientes.\r\n                                    </Typography>\r\n                                <Row>\r\n                                    <Col sm='6'>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            id='stockSelect'\r\n                                            select\r\n                                            label='Articulos de inventario'\r\n                                            name='stockSelect'\r\n                                            value={stockSelect}\r\n                                            onChange={this.handleSelectIngredient}\r\n                                            helperText='Articulos de inventario.'\r\n                                            variant='outlined'\r\n                                        >\r\n                                            {stock && stock.map((stockItem, key) => {\r\n                                                return (\r\n                                                    <MenuItem key={key} value={stockItem}>\r\n                                                        {stockItem.nombre}\r\n                                                    </MenuItem>\r\n                                                );\r\n                                            })}\r\n                                        </TextField>\r\n                                        <div className='mb-2' />\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            id='baseProductSelect'\r\n                                            select\r\n                                            label='Productos base'\r\n                                            name='baseProductSelect'\r\n                                            value={baseProductSelect}\r\n                                            onChange={this.handleSelectIngredient}\r\n                                            helperText='Productos base.'\r\n                                            variant='outlined'\r\n                                        >\r\n                                            {baseProducts && baseProducts.map((base, key) => {\r\n                                                return (\r\n                                                    <MenuItem key={key} value={base}>\r\n                                                        {base.nombre}\r\n                                                    </MenuItem>\r\n                                                );\r\n                                            })}\r\n                                        </TextField>\r\n                                        <MaterialButton onClick={() => this.setState({baseProductModal: true})} size='small' color='primary' style={{ textTransform: 'initial' }}>Crear producto base</MaterialButton>\r\n                                        <div className='mb-3' />\r\n                                    </Col>\r\n                                    <Col sm='6'>\r\n                                        <ModalProductTable\r\n                                            products={this.state.ingredients}\r\n                                        />\r\n                                    </Col >\r\n                                </Row>\r\n                            </Container>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color='primary' >Agregar producto</Button>{' '}\r\n                            <Button color='secondary' onClick={this.props.cancelModal} >Cancelar</Button>\r\n                        </ModalFooter>\r\n                    </Form>\r\n                </Modal>\r\n                <AlertInput\r\n                    modalTitle='Agregar cantidad'\r\n                    isOpen={this.state.alertQuantity}\r\n                    value={this.state.alertQuantityItem}\r\n                    cancelModal={() => this.setState({ alertQuantity: false })}\r\n                    toggle={() => this.setState({ alertQuantity: !this.state.alertQuantity })}\r\n                    onConfirmAddProduct={this.onConfirmAddProduct}\r\n                />\r\n                <ModalBaseProduct\r\n                    modalTitle='Crear producto base'\r\n                    isOpen={this.state.baseProductModal}\r\n                    cancelModal={() => this.setState({ baseProductModal: false })}\r\n                    toggle={() => this.setState({ baseProductModal: !this.state.baseProductModal })}\r\n                    onConfirmAddProduct={this.onConfirmAddProduct}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PageTitleBar from 'components/PageTitleBar';\r\nimport ModalProduct from './components/ModalProduct';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nclass ProductList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalProductTitle: 'Crear producto',\r\n      modalProductOpen: true\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <PageTitleBar title={'Productos'} description={'Productos a la venta'} />\r\n        <div className={'m-3'}>\r\n          <div className={'m-2'}>\r\n            <div className='mb-3'>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                startIcon={<AddCircleIcon />}\r\n                onClick={() => this.setState({modalProductOpen: true})}\r\n              >\r\n                Crear producto.\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ModalProduct\r\n          modalTitle={this.state.modalProductTitle}\r\n          isOpen={this.state.modalProductOpen}\r\n          cancelModal={() => { this.setState({ modalProductOpen: false }) }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Grid,\r\n  Divider,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Typography,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  item: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  }\r\n}));\r\n\r\nconst Notifications = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <form>\r\n        <CardHeader\r\n          subheader=\"Manage the notifications\"\r\n          title=\"Notifications\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={6}\r\n            wrap=\"wrap\"\r\n          >\r\n            <Grid\r\n              className={classes.item}\r\n              item\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n            >\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n                Notifications\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    defaultChecked //\r\n                  />\r\n                }\r\n                label=\"Email\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    defaultChecked //\r\n                  />\r\n                }\r\n                label=\"Push Notifications\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox color=\"primary\" />}\r\n                label=\"Text Messages\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    defaultChecked //\r\n                  />\r\n                }\r\n                label=\"Phone calls\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              className={classes.item}\r\n              item\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n            >\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n                Messages\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    defaultChecked //\r\n                  />\r\n                }\r\n                label=\"Email\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox color=\"primary\" />}\r\n                label=\"Push Notifications\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    defaultChecked //\r\n                  />\r\n                }\r\n                label=\"Phone calls\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nNotifications.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Password = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({\r\n    password: '',\r\n    confirm: ''\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <form>\r\n        <CardHeader\r\n          subheader=\"Update password\"\r\n          title=\"Password\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Confirm password\"\r\n            name=\"confirm\"\r\n            onChange={handleChange}\r\n            style={{ marginTop: '1rem' }}\r\n            type=\"password\"\r\n            value={values.confirm}\r\n            variant=\"outlined\"\r\n          />\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n          >\r\n            Update\r\n          </Button>\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPassword.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Password;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { Notifications, Password } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst Settings = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          md={7}\r\n          xs={12}\r\n        >\r\n          <Notifications />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          md={5}\r\n          xs={12}\r\n        >\r\n          <Password />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\n\r\n// Material components\r\nimport { SvgIcon } from '@material-ui/core';\r\n\r\nexport default function Facebook(props) {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M9.53144612,22.005 L9.53144612,13.0552149 L6.44166667,13.0552149 L6.44166667,9.49875 L9.53144612,9.49875 L9.53144612,6.68484375 C9.53144612,5.19972656 9.95946769,4.04680661 10.8155103,3.22608401 C11.6715529,2.4053613 12.808485,1.995 14.2263057,1.995 C15.3766134,1.995 16.3129099,2.04710915 17.0351961,2.15132812 L17.0351961,5.3169726 L15.1090998,5.3169726 C14.3868137,5.3169726 13.8919142,5.47330073 13.6244006,5.78595698 C13.4103902,6.04650407 13.3033846,6.46337874 13.3033846,7.03658198 L13.3033846,9.49875 L16.71418,9.49875 L16.2326559,13.0552149 L13.3033846,13.0552149 L13.3033846,22.005 L9.53144612,22.005 Z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\n// Material components\r\nimport { SvgIcon } from '@material-ui/core';\r\n\r\nexport default function Google(props) {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M21,12.2177419 C21,13.9112905 20.6311475,15.4233869 19.8934426,16.7540323 C19.1557377,18.0846776 18.1168031,19.1249998 16.7766393,19.875 C15.4364756,20.6250002 13.8934424,21 12.147541,21 C10.4999998,21 8.97540984,20.5947579 7.57377049,19.7842742 C6.17213115,18.9737905 5.05942604,17.8790323 4.23565574,16.5 C3.41188543,15.1209677 3,13.6209679 3,12 C3,10.3790321 3.41188543,8.87903226 4.23565574,7.5 C5.05942604,6.12096774 6.17213115,5.02620949 7.57377049,4.21572581 C8.97540984,3.40524212 10.4999998,3 12.147541,3 C14.5327871,3 16.5737705,3.78629051 18.2704918,5.35887097 L15.7991803,7.71774194 C15.0122953,6.96774175 14.0655738,6.52016129 12.9590164,6.375 C11.9262295,6.22983871 10.9057375,6.375 9.89754098,6.81048387 C8.88934445,7.24596774 8.07786904,7.89919355 7.46311475,8.77016129 C6.79918033,9.71370968 6.46721311,10.7903228 6.46721311,12 C6.46721311,13.0403228 6.72540984,13.9899192 7.24180328,14.8487903 C7.75819672,15.7076615 8.4467215,16.3971776 9.30737705,16.9173387 C10.1680326,17.4374998 11.1147541,17.6975806 12.147541,17.6975806 C13.2540984,17.6975806 14.2254096,17.455645 15.0614754,16.9717742 C15.7254098,16.5846772 16.2786885,16.0645161 16.7213115,15.4112903 C17.0409838,14.8790321 17.2499998,14.3467744 17.3483607,13.8145161 L12.147541,13.8145161 L12.147541,10.6935484 L20.852459,10.6935484 C20.9508199,11.2258066 21,11.7338712 21,12.2177419 Z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport validate from 'validate.js';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport { Facebook as FacebookIcon, Google as GoogleIcon } from 'icons';\r\n\r\nconst schema = {\r\n  email: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    email: true,\r\n    length: {\r\n      maximum: 64\r\n    }\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 128\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    height: '100%'\r\n  },\r\n  grid: {\r\n    height: '100%'\r\n  },\r\n  quoteContainer: {\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  quote: {\r\n    backgroundColor: theme.palette.neutral,\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: 'url(/images/auth.jpg)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  },\r\n  quoteInner: {\r\n    textAlign: 'center',\r\n    flexBasis: '600px'\r\n  },\r\n  quoteText: {\r\n    color: theme.palette.white,\r\n    fontWeight: 300\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(3),\r\n    color: theme.palette.white\r\n  },\r\n  bio: {\r\n    color: theme.palette.white\r\n  },\r\n  contentContainer: {},\r\n  content: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  contentHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: theme.spacing(5),\r\n    paddingBototm: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n  logoImage: {\r\n    marginLeft: theme.spacing(4)\r\n  },\r\n  contentBody: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: 'center'\r\n    }\r\n  },\r\n  form: {\r\n    paddingLeft: 100,\r\n    paddingRight: 100,\r\n    paddingBottom: 125,\r\n    flexBasis: 700,\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2)\r\n    }\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  socialButtons: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  socialIcon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  sugestion: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  signInButton: {\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nconst SignIn = props => {\r\n  const { history } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === 'checkbox'\r\n            ? event.target.checked\r\n            : event.target.value\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSignIn = event => {\r\n    event.preventDefault();\r\n    history.push('/');\r\n  };\r\n\r\n  const hasError = field =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        className={classes.grid}\r\n        container\r\n      >\r\n        <Grid\r\n          className={classes.quoteContainer}\r\n          item\r\n          lg={5}\r\n        >\r\n          <div className={classes.quote}>\r\n            <div className={classes.quoteInner}>\r\n              <Typography\r\n                className={classes.quoteText}\r\n                variant=\"h1\"\r\n              >\r\n                Hella narwhal Cosby sweater McSweeney's, salvia kitsch before\r\n                they sold out High Life.\r\n              </Typography>\r\n              <div className={classes.person}>\r\n                <Typography\r\n                  className={classes.name}\r\n                  variant=\"body1\"\r\n                >\r\n                  Takamaru Ayako\r\n                </Typography>\r\n                <Typography\r\n                  className={classes.bio}\r\n                  variant=\"body2\"\r\n                >\r\n                  Manager at inVision\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          className={classes.content}\r\n          item\r\n          lg={7}\r\n          xs={12}\r\n        >\r\n          <div className={classes.content}>\r\n            <div className={classes.contentHeader}>\r\n              <IconButton onClick={handleBack}>\r\n                <ArrowBackIcon />\r\n              </IconButton>\r\n            </div>\r\n            <div className={classes.contentBody}>\r\n              <form\r\n                className={classes.form}\r\n                onSubmit={handleSignIn}\r\n              >\r\n                <Typography\r\n                  className={classes.title}\r\n                  variant=\"h2\"\r\n                >\r\n                  Sign in\r\n                </Typography>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  Sign in with social media\r\n                </Typography>\r\n                <Grid\r\n                  className={classes.socialButtons}\r\n                  container\r\n                  spacing={2}\r\n                >\r\n                  <Grid item>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={handleSignIn}\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      <FacebookIcon className={classes.socialIcon} />\r\n                      Login with Facebook\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button\r\n                      onClick={handleSignIn}\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      <GoogleIcon className={classes.socialIcon} />\r\n                      Login with Google\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <Typography\r\n                  align=\"center\"\r\n                  className={classes.sugestion}\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  or login with email address\r\n                </Typography>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('email')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('email') ? formState.errors.email[0] : null\r\n                  }\r\n                  label=\"Email address\"\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.email || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('password')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('password') ? formState.errors.password[0] : null\r\n                  }\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={formState.values.password || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Button\r\n                  className={classes.signInButton}\r\n                  color=\"primary\"\r\n                  disabled={!formState.isValid}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Sign in now\r\n                </Button>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Don't have an account?{' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/sign-up\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign up\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nSignIn.propTypes = {\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withRouter(SignIn);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport validate from 'validate.js';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  FormHelperText,\r\n  Checkbox,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst schema = {\r\n  firstName: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 32\r\n    }\r\n  },\r\n  lastName: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 32\r\n    }\r\n  },\r\n  email: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    email: true,\r\n    length: {\r\n      maximum: 64\r\n    }\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 128\r\n    }\r\n  },\r\n  policy: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    checked: true\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    height: '100%'\r\n  },\r\n  grid: {\r\n    height: '100%'\r\n  },\r\n  quoteContainer: {\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  quote: {\r\n    backgroundColor: theme.palette.neutral,\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: 'url(/images/auth.jpg)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  },\r\n  quoteInner: {\r\n    textAlign: 'center',\r\n    flexBasis: '600px'\r\n  },\r\n  quoteText: {\r\n    color: theme.palette.white,\r\n    fontWeight: 300\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(3),\r\n    color: theme.palette.white\r\n  },\r\n  bio: {\r\n    color: theme.palette.white\r\n  },\r\n  contentContainer: {},\r\n  content: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  contentHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: theme.spacing(5),\r\n    paddingBototm: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n  logoImage: {\r\n    marginLeft: theme.spacing(4)\r\n  },\r\n  contentBody: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: 'center'\r\n    }\r\n  },\r\n  form: {\r\n    paddingLeft: 100,\r\n    paddingRight: 100,\r\n    paddingBottom: 125,\r\n    flexBasis: 700,\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2)\r\n    }\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  policy: {\r\n    marginTop: theme.spacing(1),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  policyCheckbox: {\r\n    marginLeft: '-14px'\r\n  },\r\n  signUpButton: {\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nconst SignUp = props => {\r\n  const { history } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === 'checkbox'\r\n            ? event.target.checked\r\n            : event.target.value\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleSignUp = event => {\r\n    event.preventDefault();\r\n    history.push('/');\r\n  };\r\n\r\n  const hasError = field =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        className={classes.grid}\r\n        container\r\n      >\r\n        <Grid\r\n          className={classes.quoteContainer}\r\n          item\r\n          lg={5}\r\n        >\r\n          <div className={classes.quote}>\r\n            <div className={classes.quoteInner}>\r\n              <Typography\r\n                className={classes.quoteText}\r\n                variant=\"h1\"\r\n              >\r\n                Hella narwhal Cosby sweater McSweeney's, salvia kitsch before\r\n                they sold out High Life.\r\n              </Typography>\r\n              <div className={classes.person}>\r\n                <Typography\r\n                  className={classes.name}\r\n                  variant=\"body1\"\r\n                >\r\n                  Takamaru Ayako\r\n                </Typography>\r\n                <Typography\r\n                  className={classes.bio}\r\n                  variant=\"body2\"\r\n                >\r\n                  Manager at inVision\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          className={classes.content}\r\n          item\r\n          lg={7}\r\n          xs={12}\r\n        >\r\n          <div className={classes.content}>\r\n            <div className={classes.contentHeader}>\r\n              <IconButton onClick={handleBack}>\r\n                <ArrowBackIcon />\r\n              </IconButton>\r\n            </div>\r\n            <div className={classes.contentBody}>\r\n              <form\r\n                className={classes.form}\r\n                onSubmit={handleSignUp}\r\n              >\r\n                <Typography\r\n                  className={classes.title}\r\n                  variant=\"h2\"\r\n                >\r\n                  Create new account\r\n                </Typography>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  Use your email to create new account\r\n                </Typography>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('firstName')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('firstName') ? formState.errors.firstName[0] : null\r\n                  }\r\n                  label=\"First name\"\r\n                  name=\"firstName\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.firstName || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('lastName')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('lastName') ? formState.errors.lastName[0] : null\r\n                  }\r\n                  label=\"Last name\"\r\n                  name=\"lastName\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.lastName || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('email')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('email') ? formState.errors.email[0] : null\r\n                  }\r\n                  label=\"Email address\"\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.email || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('password')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('password') ? formState.errors.password[0] : null\r\n                  }\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={formState.values.password || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <div className={classes.policy}>\r\n                  <Checkbox\r\n                    checked={formState.values.policy || false}\r\n                    className={classes.policyCheckbox}\r\n                    color=\"primary\"\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography\r\n                    className={classes.policyText}\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    I have read the{' '}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                  </Typography>\r\n                </div>\r\n                {hasError('policy') && (\r\n                  <FormHelperText error>\r\n                    {formState.errors.policy[0]}\r\n                  </FormHelperText>\r\n                )}\r\n                <Button\r\n                  className={classes.signUpButton}\r\n                  color=\"primary\"\r\n                  disabled={!formState.isValid}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Sign up now\r\n                </Button>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Have an account?{' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/sign-in\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nSignUp.propTypes = {\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withRouter(SignUp);\r\n","import React, { Fragment } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography as MuiTypography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst variants = {\r\n  h1: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  h2: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  h3: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  h4: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  h5: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  h6: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  subtitle1: 'Leo varius justo aptent arcu urna felis pede nisl',\r\n  subtitle2: 'Leo varius justo aptent arcu urna felis pede nisl',\r\n  body1:\r\n    'Justo proin curabitur dictumst semper auctor, consequat tempor, nostra aenean neque turpis nunc. Leo. Sapien aliquet facilisi turpis, elit facilisi praesent porta metus leo. Dignissim amet dis nec ac integer inceptos erat dis Turpis sodales ad torquent. Dolor, erat convallis.Laoreet velit a fames commodo tristique hendrerit sociosqu rhoncus vel sapien penatibus facilisis faucibus ad. Mus purus vehicula imperdiet tempor lectus, feugiat Sapien erat viverra netus potenti mattis purus turpis. Interdum curabitur potenti tristique. Porta velit dignissim tristique ultrices primis.',\r\n  body2:\r\n    'Justo proin curabitur dictumst semper auctor, consequat tempor, nostra aenean neque turpis nunc. Leo. Sapien aliquet facilisi turpis, elit facilisi praesent porta metus leo. Dignissim amet dis nec ac integer inceptos erat dis Turpis sodales ad torquent. Dolor, erat convallis.',\r\n  caption: 'Accumsan leo pretium conubia ullamcorper.',\r\n  overline: 'Accumsan leo pretium conubia ullamcorper.',\r\n  button: 'Vivamus ultrices rutrum fames dictumst'\r\n};\r\n\r\nconst Typography = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        {Object.keys(variants).map((key, i) => (\r\n          <Fragment key={i}>\r\n            <Grid\r\n              item\r\n              sm={3}\r\n              xs={12}\r\n            >\r\n              <MuiTypography variant=\"caption\">{key}</MuiTypography>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              sm={9}\r\n              xs={12}\r\n            >\r\n              <MuiTypography variant={key}>{variants[key]}</MuiTypography>\r\n            </Grid>\r\n          </Fragment>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Typography;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1050\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst UsersTable = props => {\r\n  const { className, users, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = event => {\r\n    const { users } = props;\r\n\r\n    let selectedUsers;\r\n\r\n    if (event.target.checked) {\r\n      selectedUsers = users.map(user => user.id);\r\n    } else {\r\n      selectedUsers = [];\r\n    }\r\n\r\n    setSelectedUsers(selectedUsers);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedUsers.indexOf(id);\r\n    let newSelectedUsers = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(1));\r\n    } else if (selectedIndex === selectedUsers.length - 1) {\r\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedUsers = newSelectedUsers.concat(\r\n        selectedUsers.slice(0, selectedIndex),\r\n        selectedUsers.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedUsers(newSelectedUsers);\r\n  };\r\n\r\n  const handlePageChange = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedUsers.length === users.length}\r\n                      color=\"primary\"\r\n                      indeterminate={\r\n                        selectedUsers.length > 0 &&\r\n                        selectedUsers.length < users.length\r\n                      }\r\n                      onChange={handleSelectAll}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Email</TableCell>\r\n                  <TableCell>Location</TableCell>\r\n                  <TableCell>Phone</TableCell>\r\n                  <TableCell>Registration date</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {users.slice(0, rowsPerPage).map(user => (\r\n                  <TableRow\r\n                    className={classes.tableRow}\r\n                    hover\r\n                    key={user.id}\r\n                    selected={selectedUsers.indexOf(user.id) !== -1}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={selectedUsers.indexOf(user.id) !== -1}\r\n                        color=\"primary\"\r\n                        onChange={event => handleSelectOne(event, user.id)}\r\n                        value=\"true\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <div className={classes.nameContainer}>\r\n                        <Avatar\r\n                          className={classes.avatar}\r\n                          src={user.avatarUrl}\r\n                        >\r\n                          {getInitials(user.name)}\r\n                        </Avatar>\r\n                        <Typography variant=\"body1\">{user.name}</Typography>\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell>{user.email}</TableCell>\r\n                    <TableCell>\r\n                      {user.address.city}, {user.address.state},{' '}\r\n                      {user.address.country}\r\n                    </TableCell>\r\n                    <TableCell>{user.phone}</TableCell>\r\n                    <TableCell>\r\n                      {moment(user.createdAt).format('DD/MM/YYYY')}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n      <CardActions className={classes.actions}>\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={users.length}\r\n          onChangePage={handlePageChange}\r\n          onChangeRowsPerPage={handleRowsPerPageChange}\r\n          page={page}\r\n          rowsPerPage={rowsPerPage}\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n        />\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUsersTable.propTypes = {\r\n  className: PropTypes.string,\r\n  users: PropTypes.array.isRequired\r\n};\r\n\r\nexport default UsersTable;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { SearchInput } from 'components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  row: {\r\n    height: '42px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  spacer: {\r\n    flexGrow: 1\r\n  },\r\n  importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  searchInput: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst UsersToolbar = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <div className={classes.row}>\r\n        <span className={classes.spacer} />\r\n        <Button className={classes.importButton}>Import</Button>\r\n        <Button className={classes.exportButton}>Export</Button>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          Add user\r\n        </Button>\r\n      </div>\r\n      <div className={classes.row}>\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search user\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUsersToolbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UsersToolbar;\r\n","import uuid from 'uuid/v1';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    name: 'Ekaterina Tankova',\r\n    address: {\r\n      country: 'USA',\r\n      state: 'West Virginia',\r\n      city: 'Parkersburg',\r\n      street: '2849 Fulton Street'\r\n    },\r\n    email: 'ekaterina.tankova@devias.io',\r\n    phone: '304-428-3097',\r\n    avatarUrl: '/images/avatars/avatar_3.png',\r\n    createdAt: 1555016400000\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Cao Yu',\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Bristow',\r\n      city: 'Iowa',\r\n      street: '1865  Pleasant Hill Road'\r\n    },\r\n    email: 'cao.yu@devias.io',\r\n    avatarUrl: '/images/avatars/avatar_4.png',\r\n    phone: '712-351-5711',\r\n    createdAt: 1555016400000\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Alexa Richardson',\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Georgia',\r\n      city: 'Atlanta',\r\n      street: '4894  Lakeland Park Drive'\r\n    },\r\n    email: 'alexa.richardson@devias.io',\r\n    phone: '770-635-2682',\r\n    avatarUrl: '/images/avatars/avatar_2.png',\r\n    createdAt: 1555016400000\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Anje Keizer',\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Ohio',\r\n      city: 'Dover',\r\n      street: '4158  Hedge Street'\r\n    },\r\n    email: 'anje.keizer@devias.io',\r\n    avatarUrl: '/images/avatars/avatar_5.png',\r\n    phone: '908-691-3242',\r\n    createdAt: 1554930000000\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Clarke Gillebert',\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Texas',\r\n      city: 'Dallas',\r\n      street: '75247'\r\n    },\r\n    email: 'clarke.gillebert@devias.io',\r\n    phone: '972-333-4106',\r\n    avatarUrl: '/images/avatars/avatar_6.png',\r\n    createdAt: 1554757200000\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Adam Denisov',\r\n    address: {\r\n      country: 'USA',\r\n      state: 'California',\r\n      city: 'Bakerfield',\r\n      street: '317 Angus Road'\r\n    },\r\n    email: 'adam.denisov@devias.io',\r\n    phone: '858-602-3409',\r\n    avatarUrl: '/images/avatars/avatar_1.png',\r\n    createdAt: 1554670800000\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Ava Gregoraci',\r\n    address: {\r\n      country: 'USA',\r\n      state: 'California',\r\n      city: 'Redondo Beach',\r\n      street: '2188  Armbrester Drive'\r\n    },\r\n    email: 'ava.gregoraci@devias.io',\r\n    avatarUrl: '/images/avatars/avatar_7.png',\r\n    phone: '415-907-2647',\r\n    createdAt: 1554325200000\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Emilee Simchenko',\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Nevada',\r\n      city: 'Las Vegas',\r\n      street: '1798  Hickory Ridge Drive'\r\n    },\r\n    email: 'emilee.simchenko@devias.io',\r\n    phone: '702-661-1654',\r\n    avatarUrl: '/images/avatars/avatar_8.png',\r\n    createdAt: 1523048400000\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Kwak Seong-Min',\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Michigan',\r\n      city: 'Detroit',\r\n      street: '3934  Wildrose Lane'\r\n    },\r\n    email: 'kwak.seong.min@devias.io',\r\n    avatarUrl: '/images/avatars/avatar_9.png',\r\n    phone: '313-812-8947'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Merrile Burgett',\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Utah',\r\n      city: 'Salt Lake City',\r\n      street: '368 Lamberts Branch Road'\r\n    },\r\n    email: 'merrile.burgett@devias.io',\r\n    phone: '801-301-7894',\r\n    avatarUrl: '/images/avatars/avatar_10.png',\r\n    createdAt: 1522702800000\r\n  }\r\n];\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport { UsersToolbar, UsersTable } from './components';\r\nimport mockData from './data';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst UserList = () => {\r\n  const classes = useStyles();\r\n\r\n  const [users] = useState(mockData);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <UsersToolbar />\r\n      <div className={classes.content}>\r\n        <UsersTable users={users} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React, { forwardRef } from 'react';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nexport default {\r\n    columns: [\r\n        { title: 'Id', field: 'id_stock', type: 'numeric', editable: 'never'},\r\n        { title: 'Nombre', field: 'nombre' },\r\n        { title: 'Cantidad en inventario', field: 'cantidad', type: 'numeric' },\r\n        { title: 'Descripción', field: 'descripcion' },\r\n        { title: 'Precio', field: 'precio', type: 'numeric' },\r\n        { title: 'Provedor', field: 'id_proveedor', type: 'numeric', editable: 'never'},\r\n        { title: 'Fecha de compra', field: 'fecha_de_compra', type: 'datetime' },\r\n        { title: 'Fecha de caducidad', field: 'fecha_de_caducidad', type: 'datetime' },\r\n        { title: 'Días de soporte', field: 'dias_de_soporte', type: 'numeric' },\r\n        { title: 'Unidad de medida', field: 'unidad_de_medida', lookup: { 'Kilogramo': 'Kilogramo', 'Pieza': 'Pieza', 'Litro': 'Litro' } },\r\n    ],\r\n    options: {\r\n        exportButton: true,\r\n        actionsColumnIndex: 3\r\n    },\r\n    detailPanel: rowData => {\r\n        return (\r\n            <Table size=\"small\" aria-label=\"Más información\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Date</TableCell>\r\n                        <TableCell>Customer</TableCell>\r\n                        <TableCell align=\"right\">Amount</TableCell>\r\n                        <TableCell align=\"right\">Total price ($)</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {/* {row.history.map((historyRow) => ( */}\r\n                        <TableRow key={'historyRow.date'}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {'historyRow.date'}\r\n                            </TableCell>\r\n                            <TableCell>{'historyRow.customerId'}</TableCell>\r\n                            <TableCell align=\"right\">{'historyRow.amount'}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                                {'Math.round(historyRow.amount * row.price * 100) / 100'}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    {/* ))} */}\r\n                </TableBody>\r\n            </Table>\r\n        )\r\n\r\n    },\r\n    actions: [\r\n        rowData => ({\r\n            icon: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n            tooltip: 'Agregar articulos',\r\n            onClick: (event, rowData) => { console.log(rowData) },\r\n            disabled: rowData.birthYear < 2000\r\n        })\r\n    ]\r\n    ,\r\n    localization: {\r\n        pagination: {\r\n            labelDisplayedRows: '{from}-{to} de {count}',\r\n            labelRowsSelect: 'filas',\r\n            labelRowsPerPage: 'Filas por página:',\r\n            firstAriaLabel: 'Primera página',\r\n            firstTooltip: 'Primera página',\r\n            previousAriaLabel: 'Página anterior',\r\n            previousTooltip: 'Página anterior',\r\n            nextAriaLabel: 'Siguiente página',\r\n            nextTooltip: 'Siguiente página',\r\n            lastAriaLabel: 'Última página',\r\n            lastTooltip: 'Última página'\r\n        },\r\n        toolbar: {\r\n            nRowsSelected: '{0} fila(s) seleccionadas',\r\n            exportTitle: 'Exportar',\r\n            exportAriaLabel: 'Exportar',\r\n            exportName: 'Exportar como CSV',\r\n            searchTooltip: 'Buscar',\r\n            searchPlaceholder: 'Buscar'\r\n        },\r\n        header: {\r\n            actions: 'Acciones'\r\n        },\r\n        body: {\r\n            emptyDataSourceMessage: 'No hay información que mostrar',\r\n            filterRow: {\r\n                filterTooltip: 'Filtro'\r\n            },\r\n            addTooltip: 'Agregar',\r\n            deleteTooltip: 'Borrar',\r\n            editTooltip: 'Editar',\r\n            editRow: {\r\n                deleteText: '¿Estas seguro de eliminar esta fila?',\r\n                cancelTooltip: 'Cancelar',\r\n                saveTooltip: 'Guardar'\r\n            },\r\n\r\n        }\r\n\r\n\r\n    },\r\n    tableIcons: {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\n\r\nexport default class Phone extends Component {\r\n\r\n    render() {\r\n        const { value, isValidPhoneNumber } = this.props\r\n        return (\r\n            <PhoneInput\r\n                country={'mx'}\r\n                onlyCountries={['mx']}\r\n                placeholder=\"Número de telefono\"\r\n                value={value}\r\n                onChange={this.props.onChange}\r\n                disableDropdown={true}\r\n                countryCodeEditable={false}\r\n                isValid={isValidPhoneNumber}\r\n            />\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { isPossiblePhoneNumber} from 'react-phone-number-input';\r\nimport Phone from './components/Phone';\r\nimport 'react-phone-number-input/style.css';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport API from 'utils/API';\r\n\r\nexport default class ModalProvider extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            providerName: '',\r\n            providerAddress: '',\r\n            providerPhone: '',\r\n            isValidPhoneNumber: true,\r\n            sweetAlert: null\r\n        }\r\n    }\r\n\r\n    onSubmitModal = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.isValidPhoneNumber) {\r\n            this.errorAlert('Número invalido', 'Digite un número valido')\r\n            return\r\n        }\r\n        let tel = this.state.providerPhone.length > 2 ? '+' + this.state.providerPhone : ''\r\n        let provider = {\r\n            nombre: this.state.providerName,\r\n            direccion: this.state.providerAddress,\r\n            telefono: tel\r\n        }\r\n        API.post('/provider/createProvider.php', provider)\r\n            .then(res => {\r\n                if (res.data.status === 'fail') {\r\n                    this.errorAlert(\"Error al crear proveedor\", res.data.message)\r\n                } else {\r\n                    this.showAlert();\r\n                    this.setState({\r\n                        providerName: '',\r\n                        providerAddress: '',\r\n                        providerPhone: '',\r\n                        isValidPhoneNumber: true,\r\n                    })\r\n                    this.props.cancelModal()\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.errorAlert(\"Error al crear proveedor\", error.message);\r\n            });\r\n    }\r\n\r\n\r\n    verifyValidPhone = (value) => {\r\n        let phone = '+' + value;\r\n        if (value.length > 2 && value.length < 12) {\r\n            this.setState({\r\n                isValidPhoneNumber: false\r\n            })\r\n        } else if (value.length === 2) {\r\n            this.setState({\r\n                isValidPhoneNumber: true\r\n            })\r\n        } else if (isPossiblePhoneNumber(phone)) {\r\n            this.setState({\r\n                isValidPhoneNumber: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                isValidPhoneNumber: false\r\n            })\r\n        }\r\n    }\r\n\r\n    errorAlert = (title, description) => {\r\n        this.setState({\r\n            sweetAlert: <SweetAlert title={title}\r\n                danger\r\n                onConfirm={() =>\r\n                    this.setState({\r\n                        sweetAlert: null\r\n                    })\r\n                }\r\n                onCancel={() =>\r\n                    this.setState({\r\n                        sweetAlert: null\r\n                    })\r\n                }>\r\n                {description}\r\n            </SweetAlert>\r\n        })\r\n    }\r\n\r\n    showAlert = () => {\r\n        this.setState({\r\n            sweetAlert: <SweetAlert title=\"Proveedor creado correctamente\"\r\n                onConfirm={() =>\r\n                    this.setState({\r\n                        sweetAlert: null\r\n                    })\r\n                }\r\n                onCancel={() =>\r\n                    this.setState({\r\n                        sweetAlert: null\r\n                    })\r\n                }>\r\n            </SweetAlert>\r\n        })\r\n    }\r\n\r\n    handleChange = event => {\r\n        const value = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: value\r\n        });\r\n    }\r\n\r\n    handlePhone = (value) => {\r\n        this.verifyValidPhone(value);\r\n        this.setState({\r\n            providerPhone: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { modalTitle, isOpen } = this.props;\r\n        const { providerAddress, providerName, providerPhone } = this.state;\r\n        return (\r\n            <div>\r\n                <Modal isOpen={isOpen} zIndex={1210}  >\r\n                    <ModalHeader>{modalTitle}</ModalHeader>\r\n                    <Form onSubmit={this.onSubmitModal}>\r\n                        <ModalBody>\r\n                            <Container>\r\n                                <Row>\r\n                                    <Col >\r\n                                        <FormGroup>\r\n                                            <Label for='providerName'>Nombre </Label>\r\n                                            <Input type='text' name='providerName' id='providerName' onChange={this.handleChange} value={providerName} autoComplete={'off'} required />\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label for='providerAddress'>Dirección </Label>\r\n                                            <Input type='textarea' name='providerAddress' id='providerAddress' onChange={this.handleChange} value={providerAddress} />\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label for='providerAddress'>Telefono </Label><br />\r\n                                            <Phone\r\n                                                value={providerPhone}\r\n                                                onChange={this.handlePhone}\r\n                                                isValidPhoneNumber={this.state.isValidPhoneNumber}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color='primary' >Agregar proveedor</Button>{' '}\r\n                            <Button color='secondary' onClick={this.props.cancelModal} >Cancelar</Button>\r\n                        </ModalFooter>\r\n                    </Form>\r\n                </Modal>\r\n                {this.state.sweetAlert}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport Required from 'components/Required';\r\nimport { default as MaterialButton } from '@material-ui/core/Button';\r\nimport ModalProvider from 'components/ModalProvider'\r\nimport API from 'utils/API';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\n\r\n\r\nexport default class ModalStock extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            itemName: '',\r\n            itemDescription: '',\r\n            idProvider: '',\r\n            unit: '',\r\n            price: '',\r\n            supportDays: '',\r\n            modalProvider: false,\r\n            providerInfo: [],\r\n            sweetAlert: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getProvidersInfo()\r\n    }\r\n\r\n    getProvidersInfo = () => {\r\n        API.get('/get_suppliers.php')\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                this.setState({\r\n                    providerInfo: res.data.data\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    cancelProviderModal = () => {\r\n        this.setState({\r\n            modalProvider: false\r\n        })\r\n        this.getProvidersInfo();\r\n    }\r\n\r\n    handleChange = event => {\r\n        const value = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: value\r\n        });\r\n    }\r\n\r\n    errorAlert = (title, description) => {\r\n        this.setState({\r\n            sweetAlert: <SweetAlert title={title}\r\n                danger\r\n                onConfirm={() =>\r\n                    this.setState({\r\n                        sweetAlert: null\r\n                    })\r\n                }\r\n                onCancel={() =>\r\n                    this.setState({\r\n                        sweetAlert: null\r\n                    })\r\n                }>\r\n                {description}\r\n            </SweetAlert>\r\n        })\r\n    }\r\n\r\n    showAlert = () => {\r\n        this.setState({\r\n            sweetAlert: <SweetAlert title=\"Proveedor creado correctamente\"\r\n                onConfirm={() =>\r\n                    this.setState({\r\n                        sweetAlert: null\r\n                    })\r\n                }\r\n                onCancel={() =>\r\n                    this.setState({\r\n                        sweetAlert: null\r\n                    })\r\n                }>\r\n            </SweetAlert>\r\n        })\r\n    }\r\n\r\n    onSubmitModal = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        let stockItem = {\r\n            nombre: this.state.itemName,\r\n            id_proveedor: this.state.idProvider,\r\n            descripcion: this.state.itemDescription,\r\n            precio: this.state.price,\r\n            dias_de_soporte: this.state.supportDays,\r\n            unidad_de_medida: this.state.unit\r\n        }\r\n        API.post('create_stock_item.php', stockItem)\r\n            .then(res => {\r\n                console.log(res)\r\n                if (res.data.status === 'fail') {\r\n                    this.errorAlert(\"Error al crear proveedor\", res.data.message)\r\n                } else {\r\n                    this.showAlert();\r\n                    this.setState({\r\n                        itemName: '',\r\n                        itemDescription: '',\r\n                        idProvider: '',\r\n                        unit: '',\r\n                        price: '',\r\n                        supportDays: ''\r\n                    })\r\n                    this.props.cancelModal()\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                this.errorAlert(\"Error al crear proveedor\", error.message);\r\n            });\r\n    }\r\n    render() {\r\n        let { isOpen, modalTitle } = this.props\r\n        return (\r\n            <div>\r\n                {this.state.sweetAlert}\r\n                <Modal isOpen={isOpen} zIndex={1200} size='lg' >\r\n                    <ModalHeader>{modalTitle}</ModalHeader>\r\n                    <Form onSubmit={this.onSubmitModal}>\r\n                        <ModalBody>\r\n                            <Container>\r\n                                <Row>\r\n                                    <Col md='6'>\r\n                                        <FormGroup>\r\n                                            <Label for='itemName'>Nombre <Required placement='right' /></Label>\r\n                                            <Input required type='text' name='itemName' id='itemName' onChange={this.handleChange} value={this.state.itemName} />\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label for='itemDescription'>Descripción </Label>\r\n                                            <Input type='textarea' name='itemDescription' id='itemDescription' onChange={this.handleChange} value={this.state.itemDescription} />\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label for=\"supportDays\">Días de soporte</Label>\r\n                                            <Input\r\n                                                type=\"number\"\r\n                                                name=\"supportDays\"\r\n                                                id=\"supportDays\"\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md='6'>\r\n                                        <FormGroup style={{ marginBottom: '0px' }}>\r\n                                            <Label for='idProvider'>Proveedor</Label>\r\n                                            <Input type='select' name='idProvider' id='idProvider' value={this.state.idProvider} onChange={this.handleChange}>\r\n                                                <option value={''}>Seleccionar proveedor</option>\r\n                                                {\r\n                                                    this.state.providerInfo && this.state.providerInfo.map((provider, key) => {\r\n                                                        return <option value={provider.id_supplier} key={key}>{provider.nombre}</option>\r\n                                                    })\r\n                                                }\r\n                                            </Input>\r\n                                            <FormText color=\"muted\">\r\n                                                <MaterialButton onClick={() => this.setState({ modalProvider: true })} disableFocusRipple={true} size='small' color='primary' style={{ textTransform: 'none' }}>\r\n                                                    Agregar un proveedor\r\n                                                </MaterialButton>\r\n                                            </FormText>\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup>\r\n                                            <Label for=\"price\">Precio</Label>\r\n                                            <Input\r\n                                                type=\"number\"\r\n                                                name=\"price\"\r\n                                                id=\"price\"\r\n                                                onChange={this.handleChange}\r\n                                            />\r\n                                        </FormGroup>\r\n                                        <FormGroup>\r\n                                            <Label for='unit'>Unidad de medida</Label>\r\n                                            <Input type='select' name='unit' id='unit' value={this.state.unit} onChange={this.handleChange} required>\r\n                                                <option>Seleccione una unidad</option>\r\n                                                <option value={'Litro (l)'}>Litro</option>\r\n                                                <option value={'Kilogramo (kg)'}>Kilogramo</option>\r\n                                                <option value={'Pieza (pz)'}>Pieza</option>\r\n                                            </Input>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color='primary' >Crear artículo</Button>{' '}\r\n                            <Button color='secondary' onClick={this.props.cancelModal} >Cancelar</Button>\r\n                        </ModalFooter>\r\n                    </Form>\r\n                </Modal>\r\n                <ModalProvider modalTitle='Proveedor' isOpen={this.state.modalProvider} cancelModal={this.cancelProviderModal} />\r\n            </div>\r\n        );\r\n\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PageTitleBar from 'components/PageTitleBar';\r\nimport MUIDataTable from 'mui-datatables';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport tableConfig from './TableConfig';\r\nimport API from 'utils/API';\r\nimport ModalStock from './Components/ModalStock';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport MaterialTable from 'material-table';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\n/* import SweetAlert from 'react-bootstrap-sweetalert'; */\r\n\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport { Paper } from '@material-ui/core';\r\n\r\n\r\nexport default class StockList_ extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            isOpen: false,\r\n            sweetAlert: null,\r\n            allStockData: [],\r\n            openSnackBar: false,\r\n            snackbarSeverity: 'success',\r\n            snackbarLabel: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getStockData();\r\n    }\r\n\r\n    showAlert = () => {\r\n    }\r\n\r\n    handleSelect = (e, p) => {\r\n        console.log(e, p)\r\n    }\r\n\r\n    getStockData = async () => {\r\n        try {\r\n            let stockData = await API.get('/get_stock.php');\r\n            console.log(stockData);\r\n            let stock;\r\n            if (stockData.data.status === 'success') {\r\n                stock = stockData.data.data.map((s) => {\r\n                    const quantityButton = <div>\r\n                        {s.cantidad}\r\n                        <IconButton aria-label='delete' >\r\n                            <AddCircleOutlineIcon fontSize='small' />\r\n                        </IconButton>\r\n                    </div>\r\n                    const select = <TextField\r\n                        id={'stock' + s.id_stock}\r\n                        name={'stock' + s.id_stock}\r\n                        select\r\n                        defaultValue={s.unidad_de_medida ? s.unidad_de_medida : ''}\r\n                        /* value={s.unidad_de_medida ? s.unidad_de_medida : 'Kilogramo' } */\r\n                        onChange={(e) => this.handleSelect(e, s)}\r\n                        variant='outlined'\r\n                        size='small'\r\n                    >\r\n                        {['Kilogramo', 'Litro', 'Pieza'].map((option, key) => (\r\n                            <MenuItem key={key} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                    return [\r\n                        s.id_stock,\r\n                        s.nombre,\r\n                        quantityButton,\r\n                        s.descripcion,\r\n                        s.precio,\r\n                        '',\r\n                        s.proveedor,\r\n                        s.fecha_de_compra,\r\n                        s.fecha_de_caducidad,\r\n                        s.dias_de_soporte,\r\n                        select\r\n                    ]\r\n                })\r\n            }\r\n            console.log(stock)\r\n            /* console.log(Object.values(stockData.data.map())); */\r\n            this.setState({\r\n                /* data: stock, */\r\n                data: stockData.data.data\r\n            }, () => console.log(this.state.allStockData))\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    getResponseError = (error) => {\r\n        if (error.response) {\r\n            // Request made and server responded\r\n            console.log(error.response.data);\r\n            console.log(error.response.status);\r\n            console.log(error.response.headers);\r\n            return error.response.data\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            console.log(error.request);\r\n            return error.request\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.log('Error', error.message);\r\n            return error.message\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const columns = tableConfig.columns\r\n        const data = this.state.data\r\n\r\n        return (\r\n            <div>\r\n                <PageTitleBar title={'Inventario'} description={'Inventario de articulos'} />\r\n                <div className={'m-3'}>\r\n                    <div className={'m-2'}>\r\n                        <div className='mb-3'>\r\n                            <Button\r\n                                variant='contained'\r\n                                color='secondary'\r\n                                startIcon={<AddCircleIcon />}\r\n                                onClick={() => { this.setState({ isOpen: true }) }}\r\n                            >\r\n                                Crear nuevo articulo.\r\n                        </Button>\r\n                        </div>\r\n\r\n                        <MaterialTable\r\n                            title=\"Inventario\"\r\n                            columns={columns}\r\n                            data={data}\r\n                            icons={tableConfig.tableIcons}\r\n                            options={tableConfig.options}\r\n                            localization={tableConfig.localization}\r\n                            actions={tableConfig.actions}\r\n                            /* detailPanel={tableConfig.detailPanel} */\r\n                            editable={{\r\n                                onRowAdd: (newData) =>\r\n                                    new Promise((resolve) => {\r\n                                        setTimeout(() => {\r\n                                            resolve();\r\n                                            API.post('create_stock_item', newData)\r\n                                                .then((response) => {\r\n                                                    console.log(response)\r\n                                                    this.setState((prevState) => {\r\n                                                        const data = [...prevState.data];\r\n                                                        console.log(data)\r\n                                                        data.push(newData);\r\n                                                        return { ...prevState, data };\r\n                                                    }, () => this.setState({\r\n                                                        openSnackBar: true,\r\n                                                        snackbarSeverity: 'success',\r\n                                                        snackbarLabel: 'Articulo creado correctamente'\r\n                                                    })\r\n                                                    );\r\n                                                })\r\n                                                .catch((error) => {\r\n                                                    console.log(error)\r\n                                                    this.setState({\r\n                                                        openSnackBar: true,\r\n                                                        snackbarSeverity: 'error',\r\n                                                        snackbarLabel: 'Ocurrio un problema: ' + error + this.getResponseError(error)\r\n                                                    })\r\n                                                })\r\n                                            \r\n                                        }, 600);\r\n                                    }),\r\n                                onRowUpdate: (newData, oldData) =>\r\n                                    new Promise((resolve) => {\r\n                                        setTimeout(() => {\r\n                                            resolve();\r\n                                            if (oldData) {\r\n                                                console.log(newData)\r\n                                                API.post('/update_stock_item.php', newData)\r\n                                                    .then((response) => {\r\n                                                        console.log(response)\r\n                                                        this.setState((prevState) => {\r\n                                                            const data = [...prevState.data];\r\n                                                            data[data.indexOf(oldData)] = newData;\r\n                                                            return { ...prevState, data };\r\n                                                        }, () => this.setState({\r\n                                                            openSnackBar: true,\r\n                                                            snackbarSeverity: 'success',\r\n                                                            snackbarLabel: 'Articulo editado correctamente'\r\n                                                        })\r\n                                                        );\r\n                                                    })\r\n                                                    .catch((error) => {\r\n                                                        console.log(error)\r\n                                                        this.setState({\r\n                                                            openSnackBar: true,\r\n                                                            snackbarSeverity: 'error',\r\n                                                            snackbarLabel: 'Ocurrio un problema: ' + error + this.getResponseError(error)\r\n                                                        })\r\n                                                    })\r\n\r\n                                            }\r\n                                        }, 600);\r\n                                    }),\r\n                                onRowDelete: (oldData) =>\r\n                                    new Promise((resolve) => {\r\n                                        setTimeout(() => {\r\n                                            resolve();\r\n                                            console.log(oldData.id_stock)\r\n                                            API.delete('delete_stock_item.php', {data: {id_stock: oldData.id_stock}})\r\n                                                .then((response) => {\r\n                                                    console.log(response)\r\n                                                    this.setState((prevState) => {\r\n                                                        const data = [...prevState.data];\r\n                                                        data.splice(data.indexOf(oldData), 1);\r\n                                                        return { ...prevState, data };\r\n                                                    }, () => this.setState({\r\n                                                        openSnackBar: true,\r\n                                                        snackbarSeverity: 'success',\r\n                                                        snackbarLabel: 'Articulo eliminado correctamente'\r\n                                                    })\r\n                                                    );\r\n                                                })\r\n                                                .catch((error) => {\r\n                                                    console.log(error)\r\n                                                    this.setState({\r\n                                                        openSnackBar: true,\r\n                                                        snackbarSeverity: 'error',\r\n                                                        snackbarLabel: 'Ocurrio un problema: ' + error + this.getResponseError(error)\r\n                                                    })\r\n                                                })\r\n                                        }, 600);\r\n                                    }),\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {this.state.sweetAlert}\r\n\r\n                <ModalStock\r\n                    isOpen={this.state.isOpen}\r\n                    modalTitle={'Crear un nuevo articulo'}\r\n                    cancelModal={() => { this.setState({ isOpen: false }) }}\r\n                />\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={this.state.openSnackBar}\r\n                    autoHideDuration={6000}\r\n                    onClose={() => this.setState({ openSnackBar: false })}\r\n                    message={this.state.snackbarLabel}\r\n\r\n                    action={\r\n                        <React.Fragment>\r\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={() => this.setState({ openSnackBar: false })}>\r\n                                <CloseIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </React.Fragment>\r\n                    }\r\n                >\r\n                    <MuiAlert elevation={6} variant=\"filled\" severity={this.state.snackbarSeverity}>{this.state.snackbarLabel}</MuiAlert>\r\n                </Snackbar>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nexport default class ProviderList extends Component{\r\n    render(){\r\n        return (\r\n            <h1>asdasd</h1>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default class TabPanel extends Component {\r\n    render() {\r\n        const {children, value, index } = this.props\r\n        return (\r\n            <div role=\"tabpanel\"\r\n                hidden={value !== index}\r\n                id={`scrollable-auto-tabpanel-${index}`}\r\n                aria-labelledby={`scrollable-auto-tab-${index}`}\r\n                style={{backgroundColor: '#fff'}}\r\n            >\r\n                {value === index && (\r\n                    <Box p={3}>\r\n                        {children}\r\n                    </Box>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","export default {\r\n    ventas: [\r\n        {\r\n            id_venta: 1,\r\n            fecha_creacion: 'fecha',\r\n            productos: [\r\n                { id_producto: 1, nombre: 'hamburguer', cantidad: 2, precio: 15 },\r\n                { id_producto: 1, nombre: 'hamburguer', cantidad: 3, precio: 15 },\r\n                { id_producto: 1, nombre: 'hamburguer', cantidad: 2, precio: 15 },\r\n                { id_producto: 1, nombre: 'hamburguer', cantidad: 4, precio: 15 },\r\n                { id_producto: 1, nombre: 'hamburguer', cantidad: 2, precio: 15 },\r\n                { id_producto: 1, nombre: 'hamburguer', cantidad: 5, precio: 15 },\r\n                { id_producto: 1, nombre: 'hamburguer', cantidad: 2, precio: 15 },\r\n\r\n            ]\r\n        }\r\n    ],\r\n    categorias: \r\n    [\r\n        {\r\n            nombre: 'Burger',\r\n            productos: [\r\n                {\r\n                    id_producto: 1,\r\n                    nombre: 'B Clasica asd asdasd',\r\n                    precio: 65,\r\n                    descripcion: 'asd adasda asdasd a asd adasd asd asdasd'\r\n                },\r\n                {\r\n                    id_producto: 2,\r\n                    nombre: 'B Chuta Testa',\r\n                    precio: 65\r\n                },\r\n                {\r\n                    id_producto: 3,\r\n                    nombre: 'B Hawaii',\r\n                    precio: 65,\r\n                    descripcion: 'asdasdasdasd asdasdasd'\r\n                },\r\n                {\r\n                    id_producto: 3,\r\n                    nombre: 'B Hawaii',\r\n                    precio: 65,\r\n                    descripcion: 'Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging across all continents except Antarctica'\r\n                },\r\n                {\r\n                    id_producto: 3,\r\n                    nombre: 'B Hawaii',\r\n                    precio: 65\r\n                },\r\n                {\r\n                    id_producto: 3,\r\n                    nombre: 'B Hawaii',\r\n                    precio: 65\r\n                },\r\n\r\n            ]\r\n        },\r\n        {\r\n            nombre: 'ALITAS',\r\n            productos: [\r\n                {\r\n                    id_producto: 3,\r\n                    nombre: 'A Tamarindo-habanero',\r\n                    precio: 65,\r\n                    descripcion: 'Alitas con tamarindo y habanero',\r\n                    imagen: '/images/products/burguer.jpg'\r\n                },\r\n                {\r\n                    id_producto: 4,\r\n                    nombre: 'A Buffalo 6 pz',\r\n                    precio: 65\r\n                },\r\n                {\r\n                    id_producto: 5,\r\n                    nombre: 'Chiltepin',\r\n                    precio: 65\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            nombre: 'Hot Dog',\r\n            productos: [\r\n                {\r\n                    id_producto: 1,\r\n                    nombre: 'B Clasica',\r\n                    precio: 65\r\n                },\r\n                {\r\n                    id_producto: 2,\r\n                    nombre: 'B Chuta Testa',\r\n                    precio: 65\r\n                },\r\n                {\r\n                    id_producto: 3,\r\n                    nombre: 'B Hawaii',\r\n                    precio: 65\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            nombre: 'Burger',\r\n            productos: [\r\n                {\r\n                    id_producto: 1,\r\n                    nombre: 'B Clasica',\r\n                    precio: 65\r\n                },\r\n                {\r\n                    id_producto: 2,\r\n                    nombre: 'B Chuta Testa',\r\n                    precio: 65\r\n                },\r\n                {\r\n                    id_producto: 3,\r\n                    nombre: 'B Hawaii',\r\n                    precio: 65\r\n                }\r\n            ]\r\n        },\r\n    ]\r\n}","import React, { Component } from 'react';\r\nimport PageTitleBar from 'components/PageTitleBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabPanel from './components/TabPanel';\r\nimport { Row, Col } from 'reactstrap';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport products from './conf';\r\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport './style.scss';\r\n\r\nconst Arrow = ({ text, className }) => {\r\n    return (\r\n        <IconButton aria-label=\"delete\" className={className}>\r\n            {className === 'arrow-prev' ?\r\n                <ArrowBackIcon />\r\n                :\r\n                <ArrowForwardIcon />\r\n            }\r\n        </IconButton>\r\n    );\r\n};\r\n\r\n\r\nconst ArrowLeft = Arrow({ text: '<', className: 'arrow-prev' });\r\nconst ArrowRight = Arrow({ text: '>', className: 'arrow-next' });\r\n\r\nexport default class Sales extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: 0,\r\n            valueCategory: 0,\r\n            tabs: [],\r\n            tabContent: [],\r\n            selected: null,\r\n            productsMenu: [],\r\n            addProductAlert: null\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        /*         this.getSales() */\r\n        let tab = this.state.tabs;\r\n        let tabC = this.state.tabContent\r\n        tab.push({ label: 'Venta ' + 1 })\r\n        tabC.push({ content: 'Nuevo ' + 0 })\r\n        this.setState({\r\n            tabs: tab,\r\n            tabContent: tabC\r\n        })\r\n        let products = this.setProductsInitialization()\r\n        this.setState({\r\n            productsMenu: products\r\n        })\r\n    }\r\n\r\n    addProduct = (pro) => {\r\n        const imagen = pro.imagen ? '' + pro.imagen : '/images/products/no-image.svg'\r\n        this.setState({\r\n            addProductAlert: <SweetAlert\r\n                input\r\n                inputType='number'\r\n                validationRegex={new RegExp('^[0-9]+$')}\r\n                validationMsg=\"Valor no valido\"\r\n                showCancel\r\n                cancelBtnText='Cancelar'\r\n                confirmBtnText='Agregar artículo'\r\n                confirmBtnBsStyle=\"primary\"\r\n                cancelBtnBsStyle=\"default\"\r\n                btnSize=\"sm\"\r\n                title={pro.nombre}\r\n                placeHolder=\"cantidad\"\r\n                onConfirm={(response) => { this.onConfirmAddProduct(response) }}\r\n                onCancel={this.onCancelAddProduct}\r\n            >\r\n                <div className='row'>\r\n                    <div className='col-6'>\r\n                        <div className=\"img-product-alert\" style={{ backgroundImage: 'url('+ imagen + ')' }}>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-6 no-center'>\r\n                        <Typography variant=\"h2\" gutterBottom>${pro.precio}</Typography>\r\n                        <Typography variant=\"body1\" gutterBottom>{pro.descripcion}</Typography>\r\n                    </div>\r\n                    <div className='col-12 no-center'>\r\n                        <Typography variant='subtitle2' gutterBottom>\r\n                            Cantidad\r\n                        </Typography>\r\n                    </div>\r\n                </div>\r\n            </SweetAlert>\r\n        })\r\n    }\r\n\r\n    onConfirmAddProduct = (response) => {\r\n        console.log(response);\r\n    }\r\n\r\n    onCancelAddProduct = () => {\r\n        this.setState({\r\n            addProductAlert: null\r\n        })\r\n    }\r\n\r\n    setProductsInitialization = () => {\r\n        return products.categorias.map((categoria, key) => {\r\n            return categoria.productos.map((pro, key) => {\r\n                return (\r\n                    <Card key={key} style={{ width: '150px', minHeight: '240px' }} className='m-3'>\r\n                        <CardActionArea style={{ maxHeight: '210px', minHeight: '200px' }} onClick={() => this.addProduct(pro)}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                alt={pro.nombre}\r\n                                height=\"100\"\r\n                                image={pro.imagen ? \"/images/products/burguer.jpg\" : \"/images/products/no-image.svg\"}\r\n                                title={pro.nombre}\r\n                            />\r\n                            <CardContent style={{ minHeight: '100px', maxHeight: '100px' }}>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    {pro.nombre}\r\n                                </Typography>\r\n                                <Typography color=\"textSecondary\">\r\n                                    $ {pro.precio}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    {pro.descripcion && pro.descripcion.length > 30 ?\r\n                                        pro.descripcion.substring(0, 30) + ' ...'\r\n                                        :\r\n                                        pro.descripcion\r\n                                    }\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                );\r\n            })\r\n        })\r\n    }\r\n\r\n    onSelect = key => {\r\n        this.setState({ selected: key });\r\n    }\r\n\r\n    addTab = () => {\r\n        let tab = this.state.tabs;\r\n        let tabC = this.state.tabContent\r\n        tab.push({ label: 'Venta ' + (tab.length + 1) })\r\n        tabC.push({ content: 'Nuevo ' + tabC.length })\r\n        this.setState({\r\n            tabs: tab,\r\n            tabContent: tabC,\r\n            value: tab.length - 1\r\n        })\r\n    }\r\n\r\n    handleChange = (event, newValue) => {\r\n        this.setState({\r\n            value: newValue\r\n        }, () =>\r\n            console.log(this.state)\r\n        )\r\n    }\r\n\r\n    handleChangeCategory = (event, newValue) => {\r\n        this.setState({\r\n            valueCategory: newValue\r\n        }, () =>\r\n            console.log(this.state)\r\n        )\r\n    }\r\n\r\n    setIds = (index) => {\r\n        return {\r\n            id: `full-width-tab-${index}`,\r\n            'aria-controls': `full-width-tabpanel-${index}`,\r\n        };\r\n    }\r\n\r\n    getSaleMenu = (value) => {\r\n        return <TabPanel key={value} value={this.state.value} index={value}>\r\n            {value}\r\n        </TabPanel>\r\n    }\r\n\r\n    render() {\r\n        const { value, valueCategory, selected, addProductAlert } = this.state\r\n        return (\r\n            <div>\r\n                {addProductAlert}\r\n                <PageTitleBar title='Ventas' description='Vista para agregar ventas ' />\r\n                <div className={'m-3'}>\r\n                    <div className={'m-2'}>\r\n                        <div className='mb-3'>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                startIcon={<AddCircleIcon />}\r\n                                className={'shadow-none'}\r\n                                onClick={this.addTab}\r\n                            >\r\n                                Agregar venta.\r\n                        </Button>\r\n                        </div>\r\n                        <AppBar position=\"static\" color=\"default\" style={{ flexGrow: 1 }}>\r\n                            <Tabs\r\n                                value={this.state.value}\r\n                                onChange={this.handleChange}\r\n                                indicatorColor=\"primary\"\r\n                                textColor=\"primary\"\r\n                                variant=\"scrollable\"\r\n                                scrollButtons=\"auto\"\r\n                                aria-label=\"scrollable auto tabs example\"\r\n                            >\r\n                                {\r\n                                    this.state.tabs && this.state.tabs.map((tab, key) => {\r\n                                        return <Tab key={key} label={tab.label} {...this.setIds(key)} />;\r\n                                    })\r\n                                }\r\n                            </Tabs>\r\n                        </AppBar>\r\n                        {\r\n                            this.state.tabContent && this.state.tabContent.map((tabContent, key) => {\r\n                                return (\r\n                                    <TabPanel key={key} value={value} index={key}>\r\n                                        <Row>\r\n                                            <Col xs=\"12\" sm=\"12\" >\r\n                                                <h4>Productos</h4>\r\n                                                <AppBar position=\"static\" color='default'>\r\n                                                    <Tabs\r\n                                                        value={valueCategory}\r\n                                                        variant=\"scrollable\"\r\n                                                        scrollButtons=\"auto\"\r\n                                                        onChange={this.handleChangeCategory}\r\n                                                        aria-label=\"simple tabs example\"\r\n                                                    >\r\n                                                        {\r\n                                                            products.categorias.map((categoria, key) => {\r\n                                                                return (\r\n                                                                    <Tab key={key} label={categoria.nombre} {...this.setIds(key)} />\r\n                                                                );\r\n                                                            })\r\n                                                        }\r\n                                                    </Tabs>\r\n                                                </AppBar>\r\n                                                {products.categorias.map((categoria, key) => {\r\n                                                    return (\r\n                                                        <div role=\"tabpanel\"\r\n                                                            key={key}\r\n                                                            hidden={valueCategory !== key}\r\n                                                            id={`scrollable-auto-tabpanel-${key}`}\r\n                                                            aria-labelledby={`scrollable-auto-tab-${key}`}\r\n                                                            style={{ backgroundColor: '#fff' }}\r\n                                                        >\r\n                                                            {valueCategory === key && (\r\n                                                                <Col sm='12'>\r\n                                                                    <div>\r\n                                                                        <ScrollMenu\r\n                                                                            data={this.state.productsMenu[key]}\r\n                                                                            arrowLeft={ArrowLeft}\r\n                                                                            arrowRight={ArrowRight}\r\n                                                                            selected={selected}\r\n                                                                            onSelect={this.onSelect}\r\n                                                                            alignCenter={false}\r\n                                                                            wheel={false}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </Col>\r\n                                                            )}\r\n                                                        </div>\r\n\r\n                                                    );\r\n                                                })}\r\n                                            </Col>\r\n                                            <Col xs=\"12\" sm=\"12\" className='mt-xs-3'>\r\n                                                <h4>Venta</h4>\r\n                                                <TableContainer >\r\n                                                    <Table size='small' aria-label=\"venta\">\r\n                                                        <TableHead>\r\n                                                            <TableRow>\r\n                                                                <TableCell>Producto</TableCell>\r\n                                                                <TableCell align=\"right\">Cantidad</TableCell>\r\n                                                                <TableCell align=\"right\">P.U.</TableCell>\r\n                                                                <TableCell align=\"right\">Total</TableCell>\r\n                                                            </TableRow>\r\n                                                        </TableHead>\r\n                                                        <TableBody>\r\n                                                            {\r\n                                                                products.ventas[key] && products.ventas[key].productos.map((product, key2) => {\r\n                                                                    return (\r\n                                                                        <TableRow key={key2}>\r\n                                                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                                                {product.nombre}\r\n                                                                            </TableCell>\r\n                                                                            <TableCell align=\"right\">\r\n                                                                                <input\r\n                                                                                    type='number'\r\n                                                                                    value={product.precio}\r\n                                                                                >\r\n\r\n                                                                                </input>\r\n                                                                            </TableCell>\r\n                                                                            <TableCell align=\"right\">{product.cantidad}</TableCell>\r\n                                                                            <TableCell align=\"right\">{product.cantidad * product.precio}</TableCell>\r\n                                                                        </TableRow>\r\n                                                                    );\r\n                                                                })\r\n                                                            }\r\n                                                            <TableRow>\r\n                                                                <TableCell rowSpan={3} />\r\n                                                                <TableCell colSpan={2}>Subtotal</TableCell>\r\n                                                                <TableCell align=\"right\">{100}</TableCell>\r\n                                                            </TableRow>\r\n                                                            <TableRow>\r\n                                                                <TableCell>Tax</TableCell>\r\n                                                                <TableCell align=\"right\">10%</TableCell>\r\n                                                                <TableCell align=\"right\">10</TableCell>\r\n                                                            </TableRow>\r\n                                                            <TableRow>\r\n                                                                <TableCell colSpan={2}>Total</TableCell>\r\n                                                                <TableCell align=\"right\">110</TableCell>\r\n                                                            </TableRow>\r\n                                                        </TableBody>\r\n                                                    </Table>\r\n                                                </TableContainer>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </TabPanel>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react' ;\r\nimport PageTitleBar from 'components/PageTitleBar'\r\n\r\nexport default class PurchaseOrder extends Component {\r\n    render () {\r\n        return  (\r\n            <div>\r\n                <PageTitleBar title='Orden de compra' description='Generar orden de compra' />\r\n            </div>\r\n        );\r\n    }\r\n}","export default\r\n{\r\n    columns: ['Id', 'Nombre', 'Télefono', 'Dirección', 'Notas'],\r\n    options: {\r\n        filterType: 'checkbox',\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PageTitleBar from 'components/PageTitleBar';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport Button from '@material-ui/core/Button';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport tableConfig from './TableConfig';\r\nimport API from 'utils/API';\r\n\r\nexport default class Clients extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            sweetAlert: null,\r\n            data: []\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.getClients();\r\n    } \r\n\r\n    getClients = () => {\r\n        API.get(\"/get_clients.php\")\r\n        .then((response) => {\r\n            let clients;\r\n            if (response.data.status === 'success'){\r\n                clients = response.data.data.map(i => Object.values(i));\r\n            }\r\n            this.setState({\r\n                data: clients\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { data } = this.state\r\n        return (\r\n            <div>\r\n                <PageTitleBar title='Clientes' description='Vista de clientes ' />\r\n                <div className={'m-3'}>\r\n                    <div className={'m-2'}>\r\n                        <div className='mb-3'>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                startIcon={<AddCircleIcon />}\r\n                                onClick={() => { this.setState({ isOpen: true }) }}\r\n                            >\r\n                                Agregar cliente.\r\n                        </Button>\r\n                        </div>\r\n\r\n                        <MUIDataTable\r\n                            title={\"Clientes\"}\r\n                            data={data}\r\n                            columns={tableConfig.columns}\r\n                            options={tableConfig.options}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {this.state.sweetAlert}\r\n            </div>\r\n        );\r\n    }\r\n}","import React , { Component } from 'react';\r\nimport PageTitleBar from 'components/PageTitleBar';\r\n\r\nexport default class SalesHistory extends Component {\r\n    render () {\r\n        return (\r\n            <div>\r\n                <PageTitleBar title='Historial de ventas' description='Historial de ventas' />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Switch, Redirect } from 'react-router-dom';\r\n\r\nimport { RouteWithLayout } from './components';\r\nimport { Main as MainLayout, Minimal as MinimalLayout } from './layouts';\r\n\r\nimport {\r\n  Dashboard as DashboardView,\r\n  ProviderList as ProviderListView,\r\n  StockList as StockListView,\r\n  Sales as SaleView,\r\n  ProductList as ProductListView,\r\n  SalesHistory as SalesHistoryView,\r\n  Clients as ClientsView,\r\n  PurchaseOrder as PurchaseOrderView,\r\n  NotFound as NotFoundView\r\n} from './views';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact\r\n        from=\"/\"\r\n        to=\"/dashboard\"\r\n      />\r\n      <RouteWithLayout\r\n        component={DashboardView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/dashboard\"\r\n      />\r\n      <RouteWithLayout\r\n        component={StockListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/inventario\"\r\n      />\r\n      <RouteWithLayout\r\n        component={ProductListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/productos\"\r\n      />\r\n      <RouteWithLayout\r\n        component={ProviderListView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/proveedores\"\r\n      />\r\n      <RouteWithLayout\r\n        component={PurchaseOrderView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/orden-de-compra\"\r\n      />\r\n      <RouteWithLayout\r\n        component={ClientsView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/clientes\"\r\n      />\r\n      <RouteWithLayout\r\n        component={SaleView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/ventas\"\r\n      />\r\n      <RouteWithLayout\r\n        component={SalesHistoryView}\r\n        exact\r\n        layout={MainLayout}\r\n        path=\"/historial\"\r\n      />\r\n      <RouteWithLayout\r\n        component={NotFoundView}\r\n        exact\r\n        layout={MinimalLayout}\r\n        path=\"/not-found\"\r\n      />\r\n      <Redirect to=\"/not-found\" />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { Component } from 'react';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Chart } from 'react-chartjs-2';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport validate from 'validate.js';\r\n\r\nimport { chartjs } from './helpers';\r\nimport theme from './theme';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport './assets/scss/index.scss';\r\nimport validators from './common/validators';\r\nimport Routes from './Routes';\r\n\r\nconst browserHistory = createBrowserHistory();\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw: chartjs.draw\r\n});\r\n\r\nvalidate.validators = {\r\n  ...validate.validators,\r\n  ...validators\r\n};\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <Router history={browserHistory}>\r\n          <Routes />\r\n        </Router>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'scss/style.scss';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}